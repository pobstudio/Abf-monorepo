"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompactMiddlewareRenderer__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [],
        name: "additionalMetadataURI",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "props",
                type: "bytes",
            },
        ],
        name: "convertProps",
        outputs: [
            {
                internalType: "bytes",
                name: "output",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "propsSize",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "props",
                type: "bytes",
            },
        ],
        name: "render",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "props",
                type: "bytes",
            },
        ],
        name: "renderRaw",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renderType",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6115f48061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c8063715018a611610071578063715018a61461017957806381612ceb146101835780638da5cb5b146101a157806392348b22146101bf578063c87c43a4146101dd578063f2fde38b1461020d576100a8565b8062a85d69146100ad57806301ffc9a7146100cb57806306fdde03146100fb578063316df61e1461011957806343c5820c14610149575b600080fd5b6100b5610229565b6040516100c29190611147565b60405180910390f35b6100e560048036038101906100e09190610e32565b610251565b6040516100f29190611068565b60405180910390f35b6101036102cb565b60405161011091906110a5565b60405180910390f35b610133600480360381019061012e9190610e5b565b610308565b60405161014091906110a5565b60405180910390f35b610163600480360381019061015e9190610e5b565b6103fd565b6040516101709190611083565b60405180910390f35b6101816104f2565b005b61018b610506565b60405161019891906110a5565b60405180910390f35b6101a9610543565b6040516101b6919061104d565b60405180910390f35b6101c7610552565b6040516101d491906110a5565b60405180910390f35b6101f760048036038101906101f29190610e5b565b610572565b6040516102049190611083565b60405180910390f35b61022760048036038101906102229190610e09565b610987565b005b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b60007fea0d9bea000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102c457506102c382610a0b565b5b9050919050565b60606040518060400160405280601781526020017f436f6d706163742044617461204d6964646c6577617265000000000000000000815250905090565b6060600061035b84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506000610a75565b90508073ffffffffffffffffffffffffffffffffffffffff1663316df61e6103838686610572565b6040518263ffffffff1660e01b815260040161039f9190611083565b60006040518083038186803b1580156103b757600080fd5b505afa1580156103cb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103f49190610ee1565b91505092915050565b6060600061045084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506000610a75565b90508073ffffffffffffffffffffffffffffffffffffffff166343c5820c6104788686610572565b6040518263ffffffff1660e01b81526004016104949190611083565b60006040518083038186803b1580156104ac57600080fd5b505afa1580156104c0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104e99190610ea0565b91505092915050565b6104fa610aeb565b6105046000610b69565b565b60606040518060400160405280600a81526020017f6d6964646c657761726500000000000000000000000000000000000000000000815250905090565b600061054d610c2d565b905090565b606060405180608001604052806042815260200161157d60429139905090565b60606000838360148181106105b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c9050600061061085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506015610c56565b9050600061066386868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506017610c56565b90508161ffff1667ffffffffffffffff8111156106a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156106db5781602001600182028036833780820191505090505b50935060006019905060005b8460ff168110156107b957878782846107009190611259565b818110610736577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b868281518110610779577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350806107b2906113a2565b90506106e7565b508360ff16816107c99190611259565b905060008460ff16836107dc9190611221565b61ffff1690505b8787905082101561097c576000888884818110610829577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c9050600089896001866108499190611259565b81811061087f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b9050600060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146109555760005b8260ff168160ff1610156109535781898260ff16866108da9190611259565b81518110610911577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808061094b906113eb565b9150506108bb565b505b8160ff16836109649190611259565b92506002846109739190611259565b935050506107e3565b505050505092915050565b61098f610aeb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f6906110c7565b60405180910390fd5b610a0881610b69565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000601482610a849190611259565b83511015610ac7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abe90611127565b60405180910390fd5b60006c01000000000000000000000000836020860101510490508091505092915050565b610af3610cbd565b73ffffffffffffffffffffffffffffffffffffffff16610b11610543565b73ffffffffffffffffffffffffffffffffffffffff1614610b67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5e90611107565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600282610c659190611259565b83511015610ca8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9f906110e7565b60405180910390fd5b60008260028501015190508091505092915050565b600033905090565b6000610cd8610cd384611187565b611162565b905082815260208101848484011115610cf057600080fd5b610cfb84828561133e565b509392505050565b6000610d16610d11846111b8565b611162565b905082815260208101848484011115610d2e57600080fd5b610d3984828561133e565b509392505050565b600081359050610d508161154e565b92915050565b600081359050610d6581611565565b92915050565b60008083601f840112610d7d57600080fd5b8235905067ffffffffffffffff811115610d9657600080fd5b602083019150836001820283011115610dae57600080fd5b9250929050565b600082601f830112610dc657600080fd5b8151610dd6848260208601610cc5565b91505092915050565b600082601f830112610df057600080fd5b8151610e00848260208601610d03565b91505092915050565b600060208284031215610e1b57600080fd5b6000610e2984828501610d41565b91505092915050565b600060208284031215610e4457600080fd5b6000610e5284828501610d56565b91505092915050565b60008060208385031215610e6e57600080fd5b600083013567ffffffffffffffff811115610e8857600080fd5b610e9485828601610d6b565b92509250509250929050565b600060208284031215610eb257600080fd5b600082015167ffffffffffffffff811115610ecc57600080fd5b610ed884828501610db5565b91505092915050565b600060208284031215610ef357600080fd5b600082015167ffffffffffffffff811115610f0d57600080fd5b610f1984828501610ddf565b91505092915050565b610f2b816112af565b82525050565b610f3a816112c1565b82525050565b6000610f4b826111e9565b610f5581856111ff565b9350610f6581856020860161133e565b610f6e81611473565b840191505092915050565b6000610f84826111f4565b610f8e8185611210565b9350610f9e81856020860161133e565b610fa781611473565b840191505092915050565b6000610fbf602683611210565b9150610fca82611484565b604082019050919050565b6000610fe2601483611210565b9150610fed826114d3565b602082019050919050565b6000611005602083611210565b9150611010826114fc565b602082019050919050565b6000611028601583611210565b915061103382611525565b602082019050919050565b61104781611327565b82525050565b60006020820190506110626000830184610f22565b92915050565b600060208201905061107d6000830184610f31565b92915050565b6000602082019050818103600083015261109d8184610f40565b905092915050565b600060208201905081810360008301526110bf8184610f79565b905092915050565b600060208201905081810360008301526110e081610fb2565b9050919050565b6000602082019050818103600083015261110081610fd5565b9050919050565b6000602082019050818103600083015261112081610ff8565b9050919050565b600060208201905081810360008301526111408161101b565b9050919050565b600060208201905061115c600083018461103e565b92915050565b600061116c61117d565b90506111788282611371565b919050565b6000604051905090565b600067ffffffffffffffff8211156111a2576111a1611444565b5b6111ab82611473565b9050602081019050919050565b600067ffffffffffffffff8211156111d3576111d2611444565b5b6111dc82611473565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061122c826112f9565b9150611237836112f9565b92508261ffff0382111561124e5761124d611415565b5b828201905092915050565b600061126482611327565b915061126f83611327565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112a4576112a3611415565b5b828201905092915050565b60006112ba82611307565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561135c578082015181840152602081019050611341565b8381111561136b576000848401525b50505050565b61137a82611473565b810181811067ffffffffffffffff8211171561139957611398611444565b5b80604052505050565b60006113ad82611327565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113e0576113df611415565b5b600182019050919050565b60006113f682611331565b915060ff82141561140a57611409611415565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f746f55696e7431365f6f75744f66426f756e6473000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f746f416464726573735f6f75744f66426f756e64730000000000000000000000600082015250565b611557816112af565b811461156257600080fd5b50565b61156e816112cd565b811461157957600080fd5b5056fe697066733a2f2f6261666b72656966696f37693469786d7734647076686e33787076696e6d676e6534686779757a653533616133687373337061647a337161777569a26469706673582212205cee6900dcb8f7ef6413797e4e6e17f8d6cf41cf13816944a840020f418319cb64736f6c63430008040033";
const isSuperArgs = (xs) => xs.length > 1;
class CompactMiddlewareRenderer__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.CompactMiddlewareRenderer__factory = CompactMiddlewareRenderer__factory;
CompactMiddlewareRenderer__factory.bytecode = _bytecode;
CompactMiddlewareRenderer__factory.abi = _abi;
//# sourceMappingURL=CompactMiddlewareRenderer__factory.js.map