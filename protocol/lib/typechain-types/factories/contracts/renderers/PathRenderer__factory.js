"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PathRenderer__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [],
        name: "additionalMetadataURI",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "propsSize",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "props",
                type: "bytes",
            },
        ],
        name: "render",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "props",
                type: "bytes",
            },
        ],
        name: "renderRaw",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "renderType",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61170c8061010d6000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c8063715018a611610066578063715018a61461016e57806381612ceb146101785780638da5cb5b1461019657806392348b22146101b4578063f2fde38b146101d25761009d565b8062a85d69146100a257806301ffc9a7146100c057806306fdde03146100f0578063316df61e1461010e57806343c5820c1461013e575b600080fd5b6100aa6101ee565b6040516100b79190611113565b60405180910390f35b6100da60048036038101906100d59190610d8b565b610216565b6040516100e79190611074565b60405180910390f35b6100f8610290565b60405161010591906110b1565b60405180910390f35b61012860048036038101906101239190610db4565b6102cd565b60405161013591906110b1565b60405180910390f35b61015860048036038101906101539190610db4565b610308565b604051610165919061108f565b60405180910390f35b6101766106d6565b005b6101806106ea565b60405161018d91906110b1565b60405180910390f35b61019e610727565b6040516101ab9190611059565b60405180910390f35b6101bc610736565b6040516101c991906110b1565b60405180910390f35b6101ec60048036038101906101e79190610d62565b610756565b005b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b60007fea0d9bea000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102895750610288826107da565b5b9050919050565b60606040518060400160405280600c81526020017f4d696e696d616c20506174680000000000000000000000000000000000000000815250905090565b60606102e16102dc8484610308565b610844565b6040516020016102f19190611037565b604051602081830303815290604052905092915050565b6060600060405180602001604052806000815250905060005b84849050600260038361033491906111f8565b61033e9190611171565b10156106ac57604c60f81b858560038461035891906111f8565b81811061038e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104395750604d60f81b85856003846103d591906111f8565b81811061040b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104b75750606c60f81b858560038461045391906111f8565b818110610489577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806105355750606d60f81b85856003846104d191906111f8565b818110610507577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156106995781858560038461054a91906111f8565b818110610580577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b6105ff6010888860016003886105a091906111f8565b6105aa9190611171565b8181106105e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c60ff166105fa9190611171565b6109ce565b61067460108989600260038961061591906111f8565b61061f9190611171565b818110610655577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c60ff1661066f9190611171565b6109ce565b6040516020016106879493929190610fb2565b60405160208183030381529060405291505b80806106a490611359565b915050610321565b816040516020016106bd919061100a565b6040516020818303038152906040529250505092915050565b6106de610b7b565b6106e86000610bf9565b565b60606040518060400160405280600581526020017f696d616765000000000000000000000000000000000000000000000000000000815250905090565b6000610731610cbd565b905090565b606060405180608001604052806042815260200161169560429139905090565b61075e610b7b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c5906110d3565b60405180910390fd5b6107d781610bf9565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6060600082511415610867576040518060200160405280600081525090506109c9565b600060405180606001604052806040815260200161165560409139905060006003600285516108969190611171565b6108a091906111c7565b60046108ac91906111f8565b67ffffffffffffffff8111156108eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561091d5781602001600182028036833780820191505090505b509050600182016020820185865187015b80821015610989576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f811685015184536001840193505061092e565b50506003865106600181146109a557600281146109b8576109c0565b603d6001830353603d60028303536109c0565b603d60018303535b50505080925050505b919050565b60606000821415610a16576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610b76565b600082905060005b60008214610a48578080610a3190611359565b915050600a82610a4191906111c7565b9150610a1e565b60008167ffffffffffffffff811115610a8a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610abc5781602001600182028036833780820191505090505b5090505b60008514610b6f57600182610ad59190611252565b9150600a85610ae491906113ac565b6030610af09190611171565b60f81b818381518110610b2c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610b6891906111c7565b9450610ac0565b8093505050505b919050565b610b83610ce6565b73ffffffffffffffffffffffffffffffffffffffff16610ba1610727565b73ffffffffffffffffffffffffffffffffffffffff1614610bf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bee906110f3565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600033905090565b600081359050610cfd81611626565b92915050565b600081359050610d128161163d565b92915050565b60008083601f840112610d2a57600080fd5b8235905067ffffffffffffffff811115610d4357600080fd5b602083019150836001820283011115610d5b57600080fd5b9250929050565b600060208284031215610d7457600080fd5b6000610d8284828501610cee565b91505092915050565b600060208284031215610d9d57600080fd5b6000610dab84828501610d03565b91505092915050565b60008060208385031215610dc757600080fd5b600083013567ffffffffffffffff811115610de157600080fd5b610ded85828601610d18565b92509250509250929050565b610e0281611286565b82525050565b610e1181611298565b82525050565b610e28610e23826112a4565b6113a2565b82525050565b6000610e398261112e565b610e438185611144565b9350610e53818560208601611326565b610e5c8161143b565b840191505092915050565b6000610e7282611139565b610e7c8185611155565b9350610e8c818560208601611326565b610e958161143b565b840191505092915050565b6000610eab82611139565b610eb58185611166565b9350610ec5818560208601611326565b80840191505092915050565b6000610ede602683611155565b9150610ee98261144c565b604082019050919050565b6000610f0160c083611166565b9150610f0c8261149b565b60c082019050919050565b6000610f24600183611166565b9150610f2f82611582565b600182019050919050565b6000610f47602083611155565b9150610f52826115ab565b602082019050919050565b6000610f6a600b83611166565b9150610f75826115d4565b600b82019050919050565b6000610f8d601a83611166565b9150610f98826115fd565b601a82019050919050565b610fac8161131c565b82525050565b6000610fbe8287610ea0565b9150610fc982610f17565b9150610fd58286610e17565b600182019150610fe58285610ea0565b9150610ff082610f17565b9150610ffc8284610ea0565b915081905095945050505050565b600061101582610ef4565b91506110218284610ea0565b915061102c82610f5d565b915081905092915050565b600061104282610f80565b915061104e8284610ea0565b915081905092915050565b600060208201905061106e6000830184610df9565b92915050565b60006020820190506110896000830184610e08565b92915050565b600060208201905081810360008301526110a98184610e2e565b905092915050565b600060208201905081810360008301526110cb8184610e67565b905092915050565b600060208201905081810360008301526110ec81610ed1565b9050919050565b6000602082019050818103600083015261110c81610f3a565b9050919050565b60006020820190506111286000830184610fa3565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061117c8261131c565b91506111878361131c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111bc576111bb6113dd565b5b828201905092915050565b60006111d28261131c565b91506111dd8361131c565b9250826111ed576111ec61140c565b5b828204905092915050565b60006112038261131c565b915061120e8361131c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611247576112466113dd565b5b828202905092915050565b600061125d8261131c565b91506112688361131c565b92508282101561127b5761127a6113dd565b5b828203905092915050565b6000611291826112fc565b9050919050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015611344578082015181840152602081019050611329565b83811115611353576000848401525b50505050565b60006113648261131c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611397576113966113dd565b5b600182019050919050565b6000819050919050565b60006113b78261131c565b91506113c28361131c565b9250826113d2576113d161140c565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060008201527f30302f737667222077696474683d2232383822206865696768743d223238382260208201527f207374796c653d226261636b67726f756e643a23463146314631223e3c70617460408201527f682066696c6c3d226e6f6e6522207374726f6b653d22626c61636b222073747260608201527f6f6b652d77696474683d223222207374726f6b652d6c696e656361703d22726f60808201527f756e6422207374726f6b652d6c696e656a6f696e3d22726f756e642220643d2260a082015250565b7f2000000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f22202f3e203c2f7376673e000000000000000000000000000000000000000000600082015250565b7f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000600082015250565b61162f81611286565b811461163a57600080fd5b50565b611646816112d0565b811461165157600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f697066733a2f2f6261666b72656968326a6c7878687a6466337a7077766d746f323561706373756f346b656e677332683770616e766f746d356c776f707063653234a26469706673582212205e74e47630f3db0db2ce85bed3685ec76916e3a3ee2409d2e6082bcdc4b6358264736f6c63430008040033";
const isSuperArgs = (xs) => xs.length > 1;
class PathRenderer__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.PathRenderer__factory = PathRenderer__factory;
PathRenderer__factory.bytecode = _bytecode;
PathRenderer__factory.abi = _abi;
//# sourceMappingURL=PathRenderer__factory.js.map