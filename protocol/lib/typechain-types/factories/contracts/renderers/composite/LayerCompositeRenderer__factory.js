"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LayerCompositeRenderer__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [],
        name: "additionalMetadataURI",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "renderers",
                type: "address[]",
            },
            {
                internalType: "bytes[]",
                name: "rendererProps",
                type: "bytes[]",
            },
        ],
        name: "encodeProps",
        outputs: [
            {
                internalType: "bytes",
                name: "output",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "propsSize",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "props",
                type: "bytes",
            },
        ],
        name: "render",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "props",
                type: "bytes",
            },
        ],
        name: "renderRaw",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renderType",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611d608061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c80634e8e2002116100715780634e8e200214610179578063715018a6146101a957806381612ceb146101b35780638da5cb5b146101d157806392348b22146101ef578063f2fde38b1461020d576100a8565b8062a85d69146100ad57806301ffc9a7146100cb57806306fdde03146100fb578063316df61e1461011957806343c5820c14610149575b600080fd5b6100b5610229565b6040516100c29190611525565b60405180910390f35b6100e560048036038101906100e09190610faa565b610251565b6040516100f29190611422565b60405180910390f35b6101036102cb565b6040516101109190611483565b60405180910390f35b610133600480360381019061012e9190610fd3565b610308565b6040516101409190611483565b60405180910390f35b610163600480360381019061015e9190610fd3565b61037a565b6040516101709190611461565b60405180910390f35b610193600480360381019061018e9190610f3e565b6105bf565b6040516101a09190611461565b60405180910390f35b6101b1610743565b005b6101bb610757565b6040516101c89190611483565b60405180910390f35b6101d9610794565b6040516101e69190611407565b60405180910390f35b6101f76107a3565b6040516102049190611483565b60405180910390f35b61022760048036038101906102229190610f15565b6107c3565b005b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b60007fea0d9bea000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102c457506102c382610847565b5b9050919050565b60606040518060400160405280600f81526020017f4c6179657220436f6d706f736974650000000000000000000000000000000000815250905090565b60606040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000081525061035261034d858561037a565b6108b1565b6040516020016103639291906113a0565b604051602081830303815290604052905092915050565b60608060005b848490508110156105955760006103db86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505083610a3b565b9050600060206014846103ee91906116a0565b6103f891906116a0565b9050600061045688888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505060148661045191906116a0565b610ab1565b8261046191906116a0565b905084600085146104a7576040518060400160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152506104b8565b604051806020016040528060008152505b8473ffffffffffffffffffffffffffffffffffffffff1663316df61e8b8b879087926104e69392919061166d565b6040518363ffffffff1660e01b815260040161050392919061143d565b60006040518083038186803b15801561051b57600080fd5b505afa15801561052f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105589190611018565b60405160200161056a93929190611359565b604051602081830303815290604052945080935050505060008161058e91906116a0565b9050610380565b50806040516020016105a791906113c4565b60405160208183030381529060405291505092915050565b606060005b835181101561073c57600073ffffffffffffffffffffffffffffffffffffffff1684828151811061061e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161461072b578184828151811061067b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518483815181106106bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151518584815181106106fe577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040516020016107199493929190611313565b60405160208183030381529060405291505b8061073590611868565b90506105c4565b5092915050565b61074b610b18565b6107556000610b96565b565b60606040518060400160405280600581526020017f696d616765000000000000000000000000000000000000000000000000000000815250905090565b600061079e610c5a565b905090565b6060604051806080016040528060428152602001611ca960429139905090565b6107cb610b18565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561083b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610832906114a5565b60405180910390fd5b61084481610b96565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606000825114156108d457604051806020016040528060008152509050610a36565b6000604051806060016040528060408152602001611ceb604091399050600060036002855161090391906116a0565b61090d91906116f6565b60046109199190611727565b67ffffffffffffffff811115610958577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561098a5781602001600182028036833780820191505090505b509050600182016020820185865187015b808210156109f6576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f811685015184536001840193505061099b565b5050600386510660018114610a125760028114610a2557610a2d565b603d6001830353603d6002830353610a2d565b603d60018303535b50505080925050505b919050565b6000601482610a4a91906116a0565b83511015610a8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8490611505565b60405180910390fd5b60006c01000000000000000000000000836020860101510490508091505092915050565b6000602082610ac091906116a0565b83511015610b03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afa906114c5565b60405180910390fd5b60008260208501015190508091505092915050565b610b20610c83565b73ffffffffffffffffffffffffffffffffffffffff16610b3e610794565b73ffffffffffffffffffffffffffffffffffffffff1614610b94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8b906114e5565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600033905090565b6000610c9e610c9984611565565b611540565b90508083825260208201905082856020860282011115610cbd57600080fd5b60005b85811015610ced5781610cd38882610df9565b845260208401935060208301925050600181019050610cc0565b5050509392505050565b6000610d0a610d0584611591565b611540565b90508083825260208201905082856020860282011115610d2957600080fd5b60005b85811015610d7357813567ffffffffffffffff811115610d4b57600080fd5b808601610d588982610ec1565b85526020850194506020840193505050600181019050610d2c565b5050509392505050565b6000610d90610d8b846115bd565b611540565b905082815260208101848484011115610da857600080fd5b610db38482856117f5565b509392505050565b6000610dce610dc9846115ee565b611540565b905082815260208101848484011115610de657600080fd5b610df1848285611804565b509392505050565b600081359050610e0881611c7a565b92915050565b600082601f830112610e1f57600080fd5b8135610e2f848260208601610c8b565b91505092915050565b600082601f830112610e4957600080fd5b8135610e59848260208601610cf7565b91505092915050565b600081359050610e7181611c91565b92915050565b60008083601f840112610e8957600080fd5b8235905067ffffffffffffffff811115610ea257600080fd5b602083019150836001820283011115610eba57600080fd5b9250929050565b600082601f830112610ed257600080fd5b8135610ee2848260208601610d7d565b91505092915050565b600082601f830112610efc57600080fd5b8151610f0c848260208601610dbb565b91505092915050565b600060208284031215610f2757600080fd5b6000610f3584828501610df9565b91505092915050565b60008060408385031215610f5157600080fd5b600083013567ffffffffffffffff811115610f6b57600080fd5b610f7785828601610e0e565b925050602083013567ffffffffffffffff811115610f9457600080fd5b610fa085828601610e38565b9150509250929050565b600060208284031215610fbc57600080fd5b6000610fca84828501610e62565b91505092915050565b60008060208385031215610fe657600080fd5b600083013567ffffffffffffffff81111561100057600080fd5b61100c85828601610e77565b92509250509250929050565b60006020828403121561102a57600080fd5b600082015167ffffffffffffffff81111561104457600080fd5b61105084828501610eeb565b91505092915050565b61106281611781565b82525050565b61107961107482611781565b6118b1565b82525050565b61108881611793565b82525050565b600061109a8385611635565b93506110a78385846117f5565b6110b08361196c565b840190509392505050565b60006110c68261161f565b6110d08185611635565b93506110e0818560208601611804565b6110e98161196c565b840191505092915050565b60006110ff8261161f565b6111098185611646565b9350611119818560208601611804565b80840191505092915050565b60006111308261162a565b61113a8185611651565b935061114a818560208601611804565b6111538161196c565b840191505092915050565b60006111698261162a565b6111738185611662565b9350611183818560208601611804565b80840191505092915050565b600061119c600483611662565b91506111a78261198a565b600482019050919050565b60006111bf602683611651565b91506111ca826119b3565b604082019050919050565b60006111e2604a83611662565b91506111ed82611a02565b604a82019050919050565b600061120560df83611662565b915061121082611a77565b60df82019050919050565b6000611228600183611662565b915061123382611b84565b600182019050919050565b600061124b601583611651565b915061125682611bad565b602082019050919050565b600061126e602083611651565b915061127982611bd6565b602082019050919050565b6000611291601583611651565b915061129c82611bff565b602082019050919050565b60006112b4601183611662565b91506112bf82611c28565b601182019050919050565b60006112d7600683611662565b91506112e282611c51565b600682019050919050565b6112f6816117eb565b82525050565b61130d611308826117eb565b6118d5565b82525050565b600061131f82876110f4565b915061132b8286611068565b60148201915061133b82856112fc565b60208201915061134b82846110f4565b915081905095945050505050565b600061136582866110f4565b9150611371828561115e565b915061137c8261118f565b9150611388828461115e565b91506113938261121b565b9150819050949350505050565b60006113ac828561115e565b91506113b8828461115e565b91508190509392505050565b60006113cf826111d5565b91506113da826112a7565b91506113e682846110f4565b91506113f1826111f8565b91506113fc826112ca565b915081905092915050565b600060208201905061141c6000830184611059565b92915050565b6000602082019050611437600083018461107f565b92915050565b6000602082019050818103600083015261145881848661108e565b90509392505050565b6000602082019050818103600083015261147b81846110bb565b905092915050565b6000602082019050818103600083015261149d8184611125565b905092915050565b600060208201905081810360008301526114be816111b2565b9050919050565b600060208201905081810360008301526114de8161123e565b9050919050565b600060208201905081810360008301526114fe81611261565b9050919050565b6000602082019050818103600083015261151e81611284565b9050919050565b600060208201905061153a60008301846112ed565b92915050565b600061154a61155b565b90506115568282611837565b919050565b6000604051905090565b600067ffffffffffffffff8211156115805761157f61193d565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156115ac576115ab61193d565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156115d8576115d761193d565b5b6115e18261196c565b9050602081019050919050565b600067ffffffffffffffff8211156116095761160861193d565b5b6116128261196c565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000808585111561167d57600080fd5b8386111561168a57600080fd5b6001850283019150848603905094509492505050565b60006116ab826117eb565b91506116b6836117eb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116eb576116ea6118df565b5b828201905092915050565b6000611701826117eb565b915061170c836117eb565b92508261171c5761171b61190e565b5b828204905092915050565b6000611732826117eb565b915061173d836117eb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611776576117756118df565b5b828202905092915050565b600061178c826117cb565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611822578082015181840152602081019050611807565b83811115611831576000848401525b50505050565b6118408261196c565b810181811067ffffffffffffffff8211171561185f5761185e61193d565b5b80604052505050565b6000611873826117eb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118a6576118a56118df565b5b600182019050919050565b60006118bc826118c3565b9050919050565b60006118ce8261197d565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f75726c2800000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060008201527f30302f737667222077696474683d223132303022206865696768743d2231323060208201527f3022207374796c653d2200000000000000000000000000000000000000000000604082015250565b7f3b6261636b67726f756e642d7265706561743a6e6f2d7265706561743b62616360008201527f6b67726f756e642d73697a653a636f6e7461696e3b6261636b67726f756e642d60208201527f706f736974696f6e3a63656e7465723b696d6167652d72656e646572696e673a60408201527f2d7765626b69742d6f7074696d697a652d636f6e74726173743b2d6d732d696e60608201527f746572706f6c6174696f6e2d6d6f64653a6e6561726573742d6e65696768626f60808201527f723b696d6167652d72656e646572696e673a2d6d6f7a2d63726973702d65646760a08201527f65733b696d6167652d72656e646572696e673a706978656c617465643b223e0060c082015250565b7f2900000000000000000000000000000000000000000000000000000000000000600082015250565b7f746f55696e743235365f6f75744f66426f756e64730000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f746f416464726573735f6f75744f66426f756e64730000000000000000000000600082015250565b7f6261636b67726f756e642d696d6167653a000000000000000000000000000000600082015250565b7f3c2f7376673e0000000000000000000000000000000000000000000000000000600082015250565b611c8381611781565b8114611c8e57600080fd5b50565b611c9a8161179f565b8114611ca557600080fd5b5056fe697066733a2f2f6261666b726569676a777a7477726f6c7763626b627a336f6d627a6b7678673237363762636b656f62726677646a666f687678676f7a62657076344142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212205e5ec9bc8af8fed250601cd9ab1638e4de02568d4e55ae673bca281eeba52e1164736f6c63430008040033";
const isSuperArgs = (xs) => xs.length > 1;
class LayerCompositeRenderer__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.LayerCompositeRenderer__factory = LayerCompositeRenderer__factory;
LayerCompositeRenderer__factory.bytecode = _bytecode;
LayerCompositeRenderer__factory.abi = _abi;
//# sourceMappingURL=LayerCompositeRenderer__factory.js.map