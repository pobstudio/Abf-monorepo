/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type { PromiseOrValue } from '../../../common';
import type {
  RendererRegistry,
  RendererRegistryInterface,
} from '../../../contracts/registries/RendererRegistry';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'renderer',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'propsSize',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'additionalMetadataURI',
        type: 'string',
      },
    ],
    name: 'RegisteredRenderer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'addressToId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_oldRenderer',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_renderer',
        type: 'address',
      },
    ],
    name: 'editRenderer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'idCounter',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'idToAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_renderer',
        type: 'address',
      },
    ],
    name: 'registerRenderer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600060025534801561001557600080fd5b50611139806100256000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632a2d0c471461005c578063c4a0d4651461008c578063cb0e0d7d146100a8578063e71d5911146100d8578063eb08ab28146100f4575b600080fd5b61007660048036038101906100719190610b4b565b610112565b6040516100839190610cb2565b60405180910390f35b6100a660048036038101906100a19190610a53565b610145565b005b6100c260048036038101906100bd9190610a53565b6104a6565b6040516100cf9190610d88565b60405180910390f35b6100f260048036038101906100ed9190610aa5565b6104be565b005b6100fc61097c565b6040516101099190610d88565b60405180910390f35b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002600081548092919061015890610f39565b919050555060008190508073ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f3433a79a000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016101bb9190610ccd565b60206040518083038186803b1580156101d357600080fd5b505afa1580156101e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020b9190610ae1565b61024a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024190610d48565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146102cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c390610d28565b60405180910390fd5b81600080600254815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600254600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fc8bbcdadf3f0a000675aa840866e67b2908a640facd90e202c0eecf51d4dd7d1600254838373ffffffffffffffffffffffffffffffffffffffff1662a85d696040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cf57600080fd5b505afa1580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104079190610b74565b8473ffffffffffffffffffffffffffffffffffffffff166392348b226040518163ffffffff1660e01b815260040160006040518083038186803b15801561044d57600080fd5b505afa158015610461573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061048a9190610b0a565b60405161049a9493929190610da3565b60405180910390a15050565b60016020528060005260406000206000915090505481565b60008290503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561052057600080fd5b505afa158015610534573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105589190610a7c565b73ffffffffffffffffffffffffffffffffffffffff16146105ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a590610ce8565b60405180910390fd5b60008290506000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081141561063b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063290610d08565b60405180910390fd5b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146106bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b490610d68565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f3433a79a000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016107169190610ccd565b60206040518083038186803b15801561072e57600080fd5b505afa158015610742573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107669190610ae1565b6107a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079c90610d48565b60405180910390fd5b8360008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fc8bbcdadf3f0a000675aa840866e67b2908a640facd90e202c0eecf51d4dd7d181858473ffffffffffffffffffffffffffffffffffffffff1662a85d696040518163ffffffff1660e01b815260040160206040518083038186803b1580156108a257600080fd5b505afa1580156108b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108da9190610b74565b8573ffffffffffffffffffffffffffffffffffffffff166392348b226040518163ffffffff1660e01b815260040160006040518083038186803b15801561092057600080fd5b505afa158015610934573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061095d9190610b0a565b60405161096d9493929190610da3565b60405180910390a15050505050565b60025481565b600061099561099084610e14565b610def565b9050828152602081018484840111156109ad57600080fd5b6109b8848285610ed5565b509392505050565b6000813590506109cf816110be565b92915050565b6000815190506109e4816110be565b92915050565b6000815190506109f9816110d5565b92915050565b600082601f830112610a1057600080fd5b8151610a20848260208601610982565b91505092915050565b600081359050610a38816110ec565b92915050565b600081519050610a4d816110ec565b92915050565b600060208284031215610a6557600080fd5b6000610a73848285016109c0565b91505092915050565b600060208284031215610a8e57600080fd5b6000610a9c848285016109d5565b91505092915050565b60008060408385031215610ab857600080fd5b6000610ac6858286016109c0565b9250506020610ad7858286016109c0565b9150509250929050565b600060208284031215610af357600080fd5b6000610b01848285016109ea565b91505092915050565b600060208284031215610b1c57600080fd5b600082015167ffffffffffffffff811115610b3657600080fd5b610b42848285016109ff565b91505092915050565b600060208284031215610b5d57600080fd5b6000610b6b84828501610a29565b91505092915050565b600060208284031215610b8657600080fd5b6000610b9484828501610a3e565b91505092915050565b610ba681610e61565b82525050565b610bb581610e7f565b82525050565b6000610bc682610e45565b610bd08185610e50565b9350610be0818560208601610ed5565b610be981610fe0565b840191505092915050565b6000610c01601983610e50565b9150610c0c82610ff1565b602082019050919050565b6000610c24601c83610e50565b9150610c2f8261101a565b602082019050919050565b6000610c47601283610e50565b9150610c5282611043565b602082019050919050565b6000610c6a602083610e50565b9150610c758261106c565b602082019050919050565b6000610c8d601f83610e50565b9150610c9882611095565b602082019050919050565b610cac81610ecb565b82525050565b6000602082019050610cc76000830184610b9d565b92915050565b6000602082019050610ce26000830184610bac565b92915050565b60006020820190508181036000830152610d0181610bf4565b9050919050565b60006020820190508181036000830152610d2181610c17565b9050919050565b60006020820190508181036000830152610d4181610c3a565b9050919050565b60006020820190508181036000830152610d6181610c5d565b9050919050565b60006020820190508181036000830152610d8181610c80565b9050919050565b6000602082019050610d9d6000830184610ca3565b92915050565b6000608082019050610db86000830187610ca3565b610dc56020830186610b9d565b610dd26040830185610ca3565b8181036060830152610de48184610bbb565b905095945050505050565b6000610df9610e0a565b9050610e058282610f08565b919050565b6000604051905090565b600067ffffffffffffffff821115610e2f57610e2e610fb1565b5b610e3882610fe0565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610e6c82610eab565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610ef3578082015181840152602081019050610ed8565b83811115610f02576000848401525b50505050565b610f1182610fe0565b810181811067ffffffffffffffff82111715610f3057610f2f610fb1565b5b80604052505050565b6000610f4482610ecb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f7757610f76610f82565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4e6f74206f776e6572206f66206f6c642072656e646572657200000000000000600082015250565b7f4f6c642072656e6465726572206e6f7420726567697374657265642e00000000600082015250565b7f416c726561647920726567697374657265640000000000000000000000000000600082015250565b7f446f6573206e6f7420616269646520746f204952656e64657265722073706563600082015250565b7f4e65772072656e646572657220616c7265616479207265676973746572656400600082015250565b6110c781610e61565b81146110d257600080fd5b50565b6110de81610e73565b81146110e957600080fd5b50565b6110f581610ecb565b811461110057600080fd5b5056fea2646970667358221220a863967deaf95ccff53927ef87799e0ab7a3b973763e54a478709f0c67c32c7464736f6c63430008040033';

type RendererRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RendererRegistryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RendererRegistry__factory extends ContractFactory {
  constructor(...args: RendererRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<RendererRegistry> {
    return super.deploy(overrides || {}) as Promise<RendererRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RendererRegistry {
    return super.attach(address) as RendererRegistry;
  }
  override connect(signer: Signer): RendererRegistry__factory {
    return super.connect(signer) as RendererRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RendererRegistryInterface {
    return new utils.Interface(_abi) as RendererRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): RendererRegistry {
    return new Contract(address, _abi, signerOrProvider) as RendererRegistry;
  }
}
