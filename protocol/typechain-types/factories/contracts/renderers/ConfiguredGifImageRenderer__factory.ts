/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type { PromiseOrValue } from '../../../common';
import type {
  ConfiguredGifImageRenderer,
  ConfiguredGifImageRendererInterface,
} from '../../../contracts/renderers/ConfiguredGifImageRenderer';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_gifImageRenderer',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'ErrorCreatingContract',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ErrorCreatingProxy',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_size',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_start',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_end',
        type: 'uint256',
      },
    ],
    name: 'InvalidCodeAtRange',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TargetAlreadyExists',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'width',
            type: 'uint8',
          },
          {
            internalType: 'uint8',
            name: 'height',
            type: 'uint8',
          },
          {
            internalType: 'bytes',
            name: 'colors',
            type: 'bytes',
          },
        ],
        internalType: 'struct ConfiguredGifImageRenderer.Configuration',
        name: 'config',
        type: 'tuple',
      },
    ],
    name: 'addConfiguration',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'attributes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxConfigurationIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'propsSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renderAttributeKey',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405260016002553480156200001657600080fd5b50604051620020723803806200207283398181016040528101906200003c919062000187565b6200005c62000050620000a460201b60201c565b620000ac60201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000201565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200018181620001e7565b92915050565b6000602082840312156200019a57600080fd5b6000620001aa8482850162000170565b91505092915050565b6000620001c082620001c7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001f281620001b3565b8114620001fe57600080fd5b50565b611e6180620002116000396000f3fe608060405234801561001057600080fd5b50600436106100b25760003560e01c806382863b5d1161007157806382863b5d1461018d5780638da5cb5b146101bd57806392348b22146101db578063b0a2f640146101f9578063effde6db14610229578063f2fde38b14610247576100b2565b8062a85d69146100b7578062e06165146100d557806301ffc9a7146100f3578063316df61e1461012357806343c5820c14610153578063715018a614610183575b600080fd5b6100bf610263565b6040516100cc9190611701565b60405180910390f35b6100dd61028b565b6040516100ea9190611701565b60405180910390f35b61010d60048036038101906101089190611054565b610291565b60405161011a91906115e0565b60405180910390f35b61013d6004803603810190610138919061107d565b61030b565b60405161014a919061167f565b60405180910390f35b61016d6004803603810190610168919061107d565b61031f565b60405161017a919061167f565b60405180910390f35b61018b61047d565b005b6101a760048036038101906101a29190611103565b610491565b6040516101b49190611701565b60405180910390f35b6101c5610542565b6040516101d291906115c5565b60405180910390f35b6101e3610551565b6040516101f0919061167f565b60405180910390f35b610213600480360381019061020e919061107d565b610571565b604051610220919061167f565b60405180910390f35b6102316105a6565b60405161023e919061167f565b60405180910390f35b610261600480360381019061025c919061102b565b6105e3565b005b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b60025481565b60007f32ce7999000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610304575061030382610667565b5b9050919050565b6060610317838361031f565b905092915050565b6060600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343c5820c6103cd8585600081811061039c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166106d1565b858560019088889050926103e393929190611828565b6040516020016103f593929190611646565b6040516020818303038152906040526040518263ffffffff1660e01b81526004016104209190611624565b60006040518083038186803b15801561043857600080fd5b505afa15801561044c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061047591906110c2565b905092915050565b610485610716565b61048f6000610794565b565b60008060038360400151516104a69190611abf565b146104e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dd906116c1565b60405180910390fd5b61053760025460001b83600001518460200151600386604001515161050b91906118b1565b8660400151604051602001610523949392919061157b565b604051602081830303815290604052610858565b506002549050919050565b600061054c6108a0565b905090565b6060604051806080016040528060428152602001611dea60429139905090565b606061057f838390506108c9565b60405160200161058f919061154e565b604051602081830303815290604052905092915050565b60606040518060400160405280600581526020017f696d616765000000000000000000000000000000000000000000000000000000815250905090565b6105eb610716565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561065b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610652906116a1565b60405180910390fd5b61066481610794565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b606061070f6106e76106e284610a76565b610acb565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610b53565b9050919050565b61071e610c39565b73ffffffffffffffffffffffffffffffffffffffff1661073c610542565b73ffffffffffffffffffffffffffffffffffffffff1614610792576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610789906116e1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000806108838360405160200161086f919061152c565b604051602081830303815290604052610c41565b905061089761089185610a76565b82610c6d565b91505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000821415610911576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610a71565b600082905060005b6000821461094357808061092c90611a24565b915050600a8261093c91906118b1565b9150610919565b60008167ffffffffffffffff811115610985577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156109b75781602001600182028036833780820191505090505b5090505b60008514610a6a576001826109d091906118e2565b9150600a856109df9190611abf565b60306109eb919061185b565b60f81b818381518110610a27577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610a6391906118b1565b94506109bb565b8093505050505b919050565b60007fd351a9253491dfef66f53115e9e3afda3b5fdef08a1de6937da91188ec553be560001b82604051602001610aae9291906115fb565b604051602081830303815290604052805190602001209050919050565b60008030837f21c35dbe1b344a2488cf3321d6ce542f8e9f305544ff09e4993a62319a497c1f60001b604051602001610b06939291906114e4565b6040516020818303038152906040528051906020012060001c905080604051602001610b3291906114b3565b6040516020818303038152906040528051906020012060001c915050919050565b60606000610b6085610c83565b90506000811415610b835760405180602001604052806000815250915050610c32565b80841115610ba35760405180602001604052806000815250915050610c32565b83831015610bec578084846040517f2c4a89fa000000000000000000000000000000000000000000000000000000008152600401610be39392919061171c565b60405180910390fd5b60008484039050600085830390506000828210610c095782610c0b565b815b90506040519450601f19601f60208301011685016040528085528087602087018a3c505050505b9392505050565b600033905090565b6060815182604051602001610c57929190611475565b6040516020818303038152906040529050919050565b6000610c7b83836000610c8e565b905092915050565b6000813b9050919050565b6000806040518060400160405280601081526020017f67363d3d37363d34f03d5260086018f3000000000000000000000000000000008152509050610cd285610acb565b91506000610cdf83610e4f565b14610d16576040517fcd43efa100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858251602084016000f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d8b576040517fbbd2fe8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff168587604051610db3919061145e565b60006040518083038185875af1925050503d8060008114610df0576040519150601f19603f3d011682016040523d82523d6000602084013e610df5565b606091505b50509050801580610e0e57506000610e0c85610e4f565b145b15610e45576040517f53de54b900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050509392505050565b6000813b9050919050565b6000610e6d610e6884611778565b611753565b905082815260208101848484011115610e8557600080fd5b610e908482856119b1565b509392505050565b6000610eab610ea6846117a9565b611753565b905082815260208101848484011115610ec357600080fd5b610ece8482856119c0565b509392505050565b600081359050610ee581611da4565b92915050565b600081359050610efa81611dbb565b92915050565b60008083601f840112610f1257600080fd5b8235905067ffffffffffffffff811115610f2b57600080fd5b602083019150836001820283011115610f4357600080fd5b9250929050565b600082601f830112610f5b57600080fd5b8135610f6b848260208601610e5a565b91505092915050565b600082601f830112610f8557600080fd5b8151610f95848260208601610e98565b91505092915050565b600060608284031215610fb057600080fd5b610fba6060611753565b90506000610fca84828501611016565b6000830152506020610fde84828501611016565b602083015250604082013567ffffffffffffffff811115610ffe57600080fd5b61100a84828501610f4a565b60408301525092915050565b60008135905061102581611dd2565b92915050565b60006020828403121561103d57600080fd5b600061104b84828501610ed6565b91505092915050565b60006020828403121561106657600080fd5b600061107484828501610eeb565b91505092915050565b6000806020838503121561109057600080fd5b600083013567ffffffffffffffff8111156110aa57600080fd5b6110b685828601610f00565b92509250509250929050565b6000602082840312156110d457600080fd5b600082015167ffffffffffffffff8111156110ee57600080fd5b6110fa84828501610f74565b91505092915050565b60006020828403121561111557600080fd5b600082013567ffffffffffffffff81111561112f57600080fd5b61113b84828501610f9e565b91505092915050565b61114d81611916565b82525050565b61116461115f82611916565b611a6d565b82525050565b61117381611928565b82525050565b61118281611934565b82525050565b61119961119482611934565b611a7f565b82525050565b60006111ab83856117f0565b93506111b88385846119b1565b6111c183611b7d565b840190509392505050565b60006111d7826117da565b6111e181856117f0565b93506111f18185602086016119c0565b6111fa81611b7d565b840191505092915050565b6000611210826117da565b61121a8185611801565b935061122a8185602086016119c0565b80840191505092915050565b6000611241826117e5565b61124b818561180c565b935061125b8185602086016119c0565b61126481611b7d565b840191505092915050565b600061127a826117e5565b611284818561181d565b93506112948185602086016119c0565b80840191505092915050565b60006112ad60028361181d565b91506112b882611bb5565b600282019050919050565b60006112d060018361181d565b91506112db82611bde565b600182019050919050565b60006112f360268361180c565b91506112fe82611c07565b604082019050919050565b600061131660028361181d565b915061132182611c56565b600282019050919050565b600061133960018361181d565b915061134482611c7f565b600182019050919050565b600061135c60208361180c565b915061136782611ca8565b602082019050919050565b600061137f60018361181d565b915061138a82611cd1565b600182019050919050565b60006113a260208361180c565b91506113ad82611cfa565b602082019050919050565b60006113c560018361181d565b91506113d082611d23565b600182019050919050565b60006113e860268361181d565b91506113f382611d2c565b602682019050919050565b600061140b60098361181d565b915061141682611d7b565b600982019050919050565b61142a8161198a565b82525050565b61144161143c82611994565b611a9b565b82525050565b611458611453826119a4565b611aad565b82525050565b600061146a8284611205565b915081905092915050565b6000611480826112c3565b915061148c8285611430565b60048201915061149b826113fe565b91506114a78284611205565b91508190509392505050565b60006114be82611309565b91506114ca8284611153565b6014820191506114d98261132c565b915081905092915050565b60006114ef82611372565b91506114fb8286611153565b60148201915061150b8285611188565b60208201915061151b8284611188565b602082019150819050949350505050565b6000611537826113b8565b91506115438284611205565b915081905092915050565b6000611559826113db565b9150611565828461126f565b9150611570826112a0565b915081905092915050565b60006115878287611447565b6001820191506115978286611447565b6001820191506115a78285611447565b6001820191506115b78284611205565b915081905095945050505050565b60006020820190506115da6000830184611144565b92915050565b60006020820190506115f5600083018461116a565b92915050565b60006040820190506116106000830185611179565b61161d6020830184611179565b9392505050565b6000602082019050818103600083015261163e81846111cc565b905092915050565b6000604082019050818103600083015261166081866111cc565b9050818103602083015261167581848661119f565b9050949350505050565b600060208201905081810360008301526116998184611236565b905092915050565b600060208201905081810360008301526116ba816112e6565b9050919050565b600060208201905081810360008301526116da8161134f565b9050919050565b600060208201905081810360008301526116fa81611395565b9050919050565b60006020820190506117166000830184611421565b92915050565b60006060820190506117316000830186611421565b61173e6020830185611421565b61174b6040830184611421565b949350505050565b600061175d61176e565b905061176982826119f3565b919050565b6000604051905090565b600067ffffffffffffffff82111561179357611792611b4e565b5b61179c82611b7d565b9050602081019050919050565b600067ffffffffffffffff8211156117c4576117c3611b4e565b5b6117cd82611b7d565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000808585111561183857600080fd5b8386111561184557600080fd5b6001850283019150848603905094509492505050565b60006118668261198a565b91506118718361198a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118a6576118a5611af0565b5b828201905092915050565b60006118bc8261198a565b91506118c78361198a565b9250826118d7576118d6611b1f565b5b828204905092915050565b60006118ed8261198a565b91506118f88361198a565b92508282101561190b5761190a611af0565b5b828203905092915050565b60006119218261196a565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156119de5780820151818401526020810190506119c3565b838111156119ed576000848401525b50505050565b6119fc82611b7d565b810181811067ffffffffffffffff82111715611a1b57611a1a611b4e565b5b80604052505050565b6000611a2f8261198a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611a6257611a61611af0565b5b600182019050919050565b6000611a7882611a89565b9050919050565b6000819050919050565b6000611a9482611ba8565b9050919050565b6000611aa682611b8e565b9050919050565b6000611ab882611b9b565b9050919050565b6000611aca8261198a565b9150611ad58361198a565b925082611ae557611ae4611b1f565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160e01b9050919050565b60008160f81b9050919050565b60008160601b9050919050565b7f7d2c000000000000000000000000000000000000000000000000000000000000600082015250565b7f6300000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7fd694000000000000000000000000000000000000000000000000000000000000600082015250565b7f0100000000000000000000000000000000000000000000000000000000000000600082015250565b7f636f6c6f7273206d75737420636f6d6520696e20722c672c62207475706c6573600082015250565b7fff00000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60008082015250565b7f7b2274726169745f74797065223a202244617461204c656e677468222c20227660008201527f616c7565223a0000000000000000000000000000000000000000000000000000602082015250565b7f80600e6000396000f30000000000000000000000000000000000000000000000600082015250565b611dad81611916565b8114611db857600080fd5b50565b611dc48161193e565b8114611dcf57600080fd5b50565b611ddb816119a4565b8114611de657600080fd5b5056fe697066733a2f2f6261666b726569616f7763623676717472727076676c646968723663626234766c6578726868786f636e79683266656c377134666b753761727575a26469706673582212207c7dcdda2d3f39704c5738c417927cd0c439d3484e3d53e43e3619331dcc7b8a64736f6c63430008040033';

type ConfiguredGifImageRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfiguredGifImageRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfiguredGifImageRenderer__factory extends ContractFactory {
  constructor(...args: ConfiguredGifImageRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gifImageRenderer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ConfiguredGifImageRenderer> {
    return super.deploy(
      _gifImageRenderer,
      overrides || {},
    ) as Promise<ConfiguredGifImageRenderer>;
  }
  override getDeployTransaction(
    _gifImageRenderer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_gifImageRenderer, overrides || {});
  }
  override attach(address: string): ConfiguredGifImageRenderer {
    return super.attach(address) as ConfiguredGifImageRenderer;
  }
  override connect(signer: Signer): ConfiguredGifImageRenderer__factory {
    return super.connect(signer) as ConfiguredGifImageRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfiguredGifImageRendererInterface {
    return new utils.Interface(_abi) as ConfiguredGifImageRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ConfiguredGifImageRenderer {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as ConfiguredGifImageRenderer;
  }
}
