/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type { PromiseOrValue } from '../../../common';
import type {
  CompactMiddlewareRenderer,
  CompactMiddlewareRendererInterface,
} from '../../../contracts/renderers/CompactMiddlewareRenderer';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'attributes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'convertProps',
    outputs: [
      {
        internalType: 'bytes',
        name: 'output',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'propsSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renderAttributeKey',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6117278061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80638da5cb5b116100715780638da5cb5b1461018e57806392348b22146101ac578063b0a2f640146101ca578063c87c43a4146101fa578063effde6db1461022a578063f2fde38b14610248576100b3565b8062a85d69146100b857806301ffc9a7146100d657806306fdde0314610106578063316df61e1461012457806343c5820c14610154578063715018a614610184575b600080fd5b6100c0610264565b6040516100cd91906112c0565b60405180910390f35b6100f060048036038101906100eb9190610fab565b61028c565b6040516100fd91906111e1565b60405180910390f35b61010e610306565b60405161011b919061121e565b60405180910390f35b61013e60048036038101906101399190610fd4565b610343565b60405161014b919061121e565b60405180910390f35b61016e60048036038101906101699190610fd4565b610438565b60405161017b91906111fc565b60405180910390f35b61018c61052d565b005b610196610541565b6040516101a391906111c6565b60405180910390f35b6101b4610550565b6040516101c1919061121e565b60405180910390f35b6101e460048036038101906101df9190610fd4565b610570565b6040516101f1919061121e565b60405180910390f35b610214600480360381019061020f9190610fd4565b610665565b60405161022191906111fc565b60405180910390f35b610232610ac3565b60405161023f919061121e565b60405180910390f35b610262600480360381019061025d9190610f82565b610b00565b005b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b60007f3433a79a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102ff57506102fe82610b84565b5b9050919050565b60606040518060400160405280601781526020017f436f6d706163742044617461204d6964646c6577617265000000000000000000815250905090565b6060600061039684848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506000610bee565b90508073ffffffffffffffffffffffffffffffffffffffff1663316df61e6103be8686610665565b6040518263ffffffff1660e01b81526004016103da91906111fc565b60006040518083038186803b1580156103f257600080fd5b505afa158015610406573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061042f919061105a565b91505092915050565b6060600061048b84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506000610bee565b90508073ffffffffffffffffffffffffffffffffffffffff166343c5820c6104b38686610665565b6040518263ffffffff1660e01b81526004016104cf91906111fc565b60006040518083038186803b1580156104e757600080fd5b505afa1580156104fb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105249190611019565b91505092915050565b610535610c64565b61053f6000610ce2565b565b600061054b610da6565b905090565b60606040518060800160405280604281526020016116b060429139905090565b606060006105c384848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506000610bee565b90508073ffffffffffffffffffffffffffffffffffffffff1663b0a2f6406105eb8686610665565b6040518263ffffffff1660e01b815260040161060791906111fc565b60006040518083038186803b15801561061f57600080fd5b505afa158015610633573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061065c919061105a565b91505092915050565b60606000838360148181106106a3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b9050600061070085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506015610dcf565b9050600061075386868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506017610dcf565b90508161ffff1667ffffffffffffffff811115610799577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156107cb5781602001600182028036833780820191505090505b509350600060f81b837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146108865760005b8161ffff168110156108845783858281518110610844577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508061087d906114d5565b90506107fe565b505b60006019905060008261ffff1690505b87879050821015610a015760008888848181106108dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c9050600089896001866108fc919061139a565b818110610932577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b905060005b8260ff168160ff1610156109d95781898260ff1686610960919061139a565b81518110610997577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806109d19061151e565b915050610941565b508160ff16836109e9919061139a565b92506002846109f8919061139a565b93505050610896565b600060f81b857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610ab8575b8361ffff16811015610ab75784868281518110610a75577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080610aaf906114d5565b915050610a2f565b5b505050505092915050565b60606040518060400160405280600581526020017f696d616765000000000000000000000000000000000000000000000000000000815250905090565b610b08610c64565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6f90611240565b60405180910390fd5b610b8181610ce2565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000601482610bfd919061139a565b83511015610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c37906112a0565b60405180910390fd5b60006c01000000000000000000000000836020860101510490508091505092915050565b610c6c610e36565b73ffffffffffffffffffffffffffffffffffffffff16610c8a610541565b73ffffffffffffffffffffffffffffffffffffffff1614610ce0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd790611280565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600282610dde919061139a565b83511015610e21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1890611260565b60405180910390fd5b60008260028501015190508091505092915050565b600033905090565b6000610e51610e4c84611300565b6112db565b905082815260208101848484011115610e6957600080fd5b610e74848285611471565b509392505050565b6000610e8f610e8a84611331565b6112db565b905082815260208101848484011115610ea757600080fd5b610eb2848285611471565b509392505050565b600081359050610ec981611681565b92915050565b600081359050610ede81611698565b92915050565b60008083601f840112610ef657600080fd5b8235905067ffffffffffffffff811115610f0f57600080fd5b602083019150836001820283011115610f2757600080fd5b9250929050565b600082601f830112610f3f57600080fd5b8151610f4f848260208601610e3e565b91505092915050565b600082601f830112610f6957600080fd5b8151610f79848260208601610e7c565b91505092915050565b600060208284031215610f9457600080fd5b6000610fa284828501610eba565b91505092915050565b600060208284031215610fbd57600080fd5b6000610fcb84828501610ecf565b91505092915050565b60008060208385031215610fe757600080fd5b600083013567ffffffffffffffff81111561100157600080fd5b61100d85828601610ee4565b92509250509250929050565b60006020828403121561102b57600080fd5b600082015167ffffffffffffffff81111561104557600080fd5b61105184828501610f2e565b91505092915050565b60006020828403121561106c57600080fd5b600082015167ffffffffffffffff81111561108657600080fd5b61109284828501610f58565b91505092915050565b6110a4816113f0565b82525050565b6110b381611402565b82525050565b60006110c482611362565b6110ce8185611378565b93506110de818560208601611471565b6110e7816115a6565b840191505092915050565b60006110fd8261136d565b6111078185611389565b9350611117818560208601611471565b611120816115a6565b840191505092915050565b6000611138602683611389565b9150611143826115b7565b604082019050919050565b600061115b601483611389565b915061116682611606565b602082019050919050565b600061117e602083611389565b91506111898261162f565b602082019050919050565b60006111a1601583611389565b91506111ac82611658565b602082019050919050565b6111c08161145a565b82525050565b60006020820190506111db600083018461109b565b92915050565b60006020820190506111f660008301846110aa565b92915050565b6000602082019050818103600083015261121681846110b9565b905092915050565b6000602082019050818103600083015261123881846110f2565b905092915050565b600060208201905081810360008301526112598161112b565b9050919050565b600060208201905081810360008301526112798161114e565b9050919050565b6000602082019050818103600083015261129981611171565b9050919050565b600060208201905081810360008301526112b981611194565b9050919050565b60006020820190506112d560008301846111b7565b92915050565b60006112e56112f6565b90506112f182826114a4565b919050565b6000604051905090565b600067ffffffffffffffff82111561131b5761131a611577565b5b611324826115a6565b9050602081019050919050565b600067ffffffffffffffff82111561134c5761134b611577565b5b611355826115a6565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006113a58261145a565b91506113b08361145a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113e5576113e4611548565b5b828201905092915050565b60006113fb8261143a565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561148f578082015181840152602081019050611474565b8381111561149e576000848401525b50505050565b6114ad826115a6565b810181811067ffffffffffffffff821117156114cc576114cb611577565b5b80604052505050565b60006114e08261145a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561151357611512611548565b5b600182019050919050565b600061152982611464565b915060ff82141561153d5761153c611548565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f746f55696e7431365f6f75744f66426f756e6473000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f746f416464726573735f6f75744f66426f756e64730000000000000000000000600082015250565b61168a816113f0565b811461169557600080fd5b50565b6116a18161140e565b81146116ac57600080fd5b5056fe697066733a2f2f6261666b7265696476626562363375706763366664686e7933726c32336d34327532786f6532707767696b6c7a7a687079616677623333686f366da26469706673582212206fdea93b7df1d7aba8d1a27763701fa4182f1dff98504ce83b46951d35a40f3864736f6c63430008040033';

type CompactMiddlewareRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompactMiddlewareRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompactMiddlewareRenderer__factory extends ContractFactory {
  constructor(...args: CompactMiddlewareRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<CompactMiddlewareRenderer> {
    return super.deploy(overrides || {}) as Promise<CompactMiddlewareRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CompactMiddlewareRenderer {
    return super.attach(address) as CompactMiddlewareRenderer;
  }
  override connect(signer: Signer): CompactMiddlewareRenderer__factory {
    return super.connect(signer) as CompactMiddlewareRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompactMiddlewareRendererInterface {
    return new utils.Interface(_abi) as CompactMiddlewareRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): CompactMiddlewareRenderer {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as CompactMiddlewareRenderer;
  }
}
