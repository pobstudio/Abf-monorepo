/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CompactMiddlewareRenderer,
  CompactMiddlewareRendererInterface,
} from "../../../contracts/renderers/CompactMiddlewareRenderer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "additionalMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "props",
        type: "bytes",
      },
    ],
    name: "attributes",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "props",
        type: "bytes",
      },
    ],
    name: "convertProps",
    outputs: [
      {
        internalType: "bytes",
        name: "output",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "propsSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "props",
        type: "bytes",
      },
    ],
    name: "render",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renderAttributeKey",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "props",
        type: "bytes",
      },
    ],
    name: "renderRaw",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6117248061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80638da5cb5b116100715780638da5cb5b1461018e57806392348b22146101ac578063b0a2f640146101ca578063c87c43a4146101fa578063effde6db1461022a578063f2fde38b14610248576100b3565b8062a85d69146100b857806301ffc9a7146100d657806306fdde0314610106578063316df61e1461012457806343c5820c14610154578063715018a614610184575b600080fd5b6100c0610264565b6040516100cd9190611277565b60405180910390f35b6100f060048036038101906100eb9190610f62565b61028c565b6040516100fd9190611198565b60405180910390f35b61010e610306565b60405161011b91906111d5565b60405180910390f35b61013e60048036038101906101399190610f8b565b610343565b60405161014b91906111d5565b60405180910390f35b61016e60048036038101906101699190610f8b565b610438565b60405161017b91906111b3565b60405180910390f35b61018c61052d565b005b610196610541565b6040516101a3919061117d565b60405180910390f35b6101b4610550565b6040516101c191906111d5565b60405180910390f35b6101e460048036038101906101df9190610f8b565b610570565b6040516101f191906111d5565b60405180910390f35b610214600480360381019061020f9190610f8b565b610665565b60405161022191906111b3565b60405180910390f35b610232610a7a565b60405161023f91906111d5565b60405180910390f35b610262600480360381019061025d9190610f39565b610ab7565b005b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b60007f3433a79a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102ff57506102fe82610b3b565b5b9050919050565b60606040518060400160405280601781526020017f436f6d706163742044617461204d6964646c6577617265000000000000000000815250905090565b6060600061039684848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506000610ba5565b90508073ffffffffffffffffffffffffffffffffffffffff1663316df61e6103be8686610665565b6040518263ffffffff1660e01b81526004016103da91906111b3565b60006040518083038186803b1580156103f257600080fd5b505afa158015610406573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061042f9190611011565b91505092915050565b6060600061048b84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506000610ba5565b90508073ffffffffffffffffffffffffffffffffffffffff166343c5820c6104b38686610665565b6040518263ffffffff1660e01b81526004016104cf91906111b3565b60006040518083038186803b1580156104e757600080fd5b505afa1580156104fb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105249190610fd0565b91505092915050565b610535610c1b565b61053f6000610c99565b565b600061054b610d5d565b905090565b60606040518060800160405280604281526020016116ad60429139905090565b606060006105c384848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506000610ba5565b90508073ffffffffffffffffffffffffffffffffffffffff1663b0a2f6406105eb8686610665565b6040518263ffffffff1660e01b815260040161060791906111b3565b60006040518083038186803b15801561061f57600080fd5b505afa158015610633573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061065c9190611011565b91505092915050565b60606000838360148181106106a3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c9050600061070385858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506015610d86565b9050600061075686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506017610d86565b90508161ffff1667ffffffffffffffff81111561079c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156107ce5781602001600182028036833780820191505090505b50935060006019905060005b8460ff168110156108ac57878782846107f39190611389565b818110610829577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b86828151811061086c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350806108a5906114d2565b90506107da565b508360ff16816108bc9190611389565b905060008460ff16836108cf9190611351565b61ffff1690505b87879050821015610a6f57600088888481811061091c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c90506000898960018661093c9190611389565b818110610972577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b9050600060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610a485760005b8260ff168160ff161015610a465781898260ff16866109cd9190611389565b81518110610a04577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080610a3e9061151b565b9150506109ae565b505b8160ff1683610a579190611389565b9250600284610a669190611389565b935050506108d6565b505050505092915050565b60606040518060400160405280600581526020017f696d616765000000000000000000000000000000000000000000000000000000815250905090565b610abf610c1b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b26906111f7565b60405180910390fd5b610b3881610c99565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000601482610bb49190611389565b83511015610bf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bee90611257565b60405180910390fd5b60006c01000000000000000000000000836020860101510490508091505092915050565b610c23610ded565b73ffffffffffffffffffffffffffffffffffffffff16610c41610541565b73ffffffffffffffffffffffffffffffffffffffff1614610c97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8e90611237565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600282610d959190611389565b83511015610dd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcf90611217565b60405180910390fd5b60008260028501015190508091505092915050565b600033905090565b6000610e08610e03846112b7565b611292565b905082815260208101848484011115610e2057600080fd5b610e2b84828561146e565b509392505050565b6000610e46610e41846112e8565b611292565b905082815260208101848484011115610e5e57600080fd5b610e6984828561146e565b509392505050565b600081359050610e808161167e565b92915050565b600081359050610e9581611695565b92915050565b60008083601f840112610ead57600080fd5b8235905067ffffffffffffffff811115610ec657600080fd5b602083019150836001820283011115610ede57600080fd5b9250929050565b600082601f830112610ef657600080fd5b8151610f06848260208601610df5565b91505092915050565b600082601f830112610f2057600080fd5b8151610f30848260208601610e33565b91505092915050565b600060208284031215610f4b57600080fd5b6000610f5984828501610e71565b91505092915050565b600060208284031215610f7457600080fd5b6000610f8284828501610e86565b91505092915050565b60008060208385031215610f9e57600080fd5b600083013567ffffffffffffffff811115610fb857600080fd5b610fc485828601610e9b565b92509250509250929050565b600060208284031215610fe257600080fd5b600082015167ffffffffffffffff811115610ffc57600080fd5b61100884828501610ee5565b91505092915050565b60006020828403121561102357600080fd5b600082015167ffffffffffffffff81111561103d57600080fd5b61104984828501610f0f565b91505092915050565b61105b816113df565b82525050565b61106a816113f1565b82525050565b600061107b82611319565b611085818561132f565b935061109581856020860161146e565b61109e816115a3565b840191505092915050565b60006110b482611324565b6110be8185611340565b93506110ce81856020860161146e565b6110d7816115a3565b840191505092915050565b60006110ef602683611340565b91506110fa826115b4565b604082019050919050565b6000611112601483611340565b915061111d82611603565b602082019050919050565b6000611135602083611340565b91506111408261162c565b602082019050919050565b6000611158601583611340565b915061116382611655565b602082019050919050565b61117781611457565b82525050565b60006020820190506111926000830184611052565b92915050565b60006020820190506111ad6000830184611061565b92915050565b600060208201905081810360008301526111cd8184611070565b905092915050565b600060208201905081810360008301526111ef81846110a9565b905092915050565b60006020820190508181036000830152611210816110e2565b9050919050565b6000602082019050818103600083015261123081611105565b9050919050565b6000602082019050818103600083015261125081611128565b9050919050565b600060208201905081810360008301526112708161114b565b9050919050565b600060208201905061128c600083018461116e565b92915050565b600061129c6112ad565b90506112a882826114a1565b919050565b6000604051905090565b600067ffffffffffffffff8211156112d2576112d1611574565b5b6112db826115a3565b9050602081019050919050565b600067ffffffffffffffff82111561130357611302611574565b5b61130c826115a3565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061135c82611429565b915061136783611429565b92508261ffff0382111561137e5761137d611545565b5b828201905092915050565b600061139482611457565b915061139f83611457565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113d4576113d3611545565b5b828201905092915050565b60006113ea82611437565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561148c578082015181840152602081019050611471565b8381111561149b576000848401525b50505050565b6114aa826115a3565b810181811067ffffffffffffffff821117156114c9576114c8611574565b5b80604052505050565b60006114dd82611457565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115105761150f611545565b5b600182019050919050565b600061152682611461565b915060ff82141561153a57611539611545565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f746f55696e7431365f6f75744f66426f756e6473000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f746f416464726573735f6f75744f66426f756e64730000000000000000000000600082015250565b611687816113df565b811461169257600080fd5b50565b61169e816113fd565b81146116a957600080fd5b5056fe697066733a2f2f6261666b72656966696f37693469786d7734647076686e33787076696e6d676e6534686779757a653533616133687373337061647a337161777569a2646970667358221220f8053184c2835a7b6cce3ef02269833a9c7cd42ec634c3243abca6201befd30864736f6c63430008040033";

type CompactMiddlewareRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompactMiddlewareRendererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompactMiddlewareRenderer__factory extends ContractFactory {
  constructor(...args: CompactMiddlewareRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CompactMiddlewareRenderer> {
    return super.deploy(overrides || {}) as Promise<CompactMiddlewareRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CompactMiddlewareRenderer {
    return super.attach(address) as CompactMiddlewareRenderer;
  }
  override connect(signer: Signer): CompactMiddlewareRenderer__factory {
    return super.connect(signer) as CompactMiddlewareRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompactMiddlewareRendererInterface {
    return new utils.Interface(_abi) as CompactMiddlewareRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompactMiddlewareRenderer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CompactMiddlewareRenderer;
  }
}
