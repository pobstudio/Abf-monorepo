/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type { PromiseOrValue } from '../../../../common';
import type {
  PathRenderer,
  PathRendererInterface,
} from '../../../../contracts/renderers/image/PathRenderer';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'propsSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renderType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6116f98061010d6000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c8063715018a611610066578063715018a61461016e57806381612ceb146101785780638da5cb5b1461019657806392348b22146101b4578063f2fde38b146101d25761009d565b8062a85d69146100a257806301ffc9a7146100c057806306fdde03146100f0578063316df61e1461010e57806343c5820c1461013e575b600080fd5b6100aa6101ee565b6040516100b79190611129565b60405180910390f35b6100da60048036038101906100d59190610dc2565b610216565b6040516100e7919061108a565b60405180910390f35b6100f8610290565b60405161010591906110c7565b60405180910390f35b61012860048036038101906101239190610deb565b6102cd565b60405161013591906110c7565b60405180910390f35b61015860048036038101906101539190610deb565b61033f565b60405161016591906110a5565b60405180910390f35b61017661070d565b005b610180610721565b60405161018d91906110c7565b60405180910390f35b61019e61075e565b6040516101ab919061106f565b60405180910390f35b6101bc61076d565b6040516101c991906110c7565b60405180910390f35b6101ec60048036038101906101e79190610d99565b61078d565b005b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b60007fea0d9bea000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610289575061028882610811565b5b9050919050565b60606040518060400160405280600481526020017f5061746800000000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000815250610317610312858561033f565b61087b565b604051602001610328929190610fc6565b604051602081830303815290604052905092915050565b6060600060405180602001604052806000815250905060005b84849050600260038361036b919061120e565b6103759190611187565b10156106e357604c60f81b858560038461038f919061120e565b8181106103c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104705750604d60f81b858560038461040c919061120e565b818110610442577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104ee5750606c60f81b858560038461048a919061120e565b8181106104c0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061056c5750606d60f81b8585600384610508919061120e565b81811061053e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156106d057818585600384610581919061120e565b8181106105b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b6106366010888860016003886105d7919061120e565b6105e19190611187565b818110610617577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c60ff166106319190611187565b610a05565b6106ab60108989600260038961064c919061120e565b6106569190611187565b81811061068c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c60ff166106a69190611187565b610a05565b6040516020016106be9493929190610fea565b60405160208183030381529060405291505b80806106db9061136f565b915050610358565b816040516020016106f49190611042565b6040516020818303038152906040529250505092915050565b610715610bb2565b61071f6000610c30565b565b60606040518060400160405280600a81526020017f696d6167655f6461746100000000000000000000000000000000000000000000815250905090565b6000610768610cf4565b905090565b606060405180608001604052806042815260200161168260429139905090565b610795610bb2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610805576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fc906110e9565b60405180910390fd5b61080e81610c30565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b606060008251141561089e57604051806020016040528060008152509050610a00565b600060405180606001604052806040815260200161164260409139905060006003600285516108cd9190611187565b6108d791906111dd565b60046108e3919061120e565b67ffffffffffffffff811115610922577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156109545781602001600182028036833780820191505090505b509050600182016020820185865187015b808210156109c0576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845360018401935050610965565b50506003865106600181146109dc57600281146109ef576109f7565b603d6001830353603d60028303536109f7565b603d60018303535b50505080925050505b919050565b60606000821415610a4d576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610bad565b600082905060005b60008214610a7f578080610a689061136f565b915050600a82610a7891906111dd565b9150610a55565b60008167ffffffffffffffff811115610ac1577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610af35781602001600182028036833780820191505090505b5090505b60008514610ba657600182610b0c9190611268565b9150600a85610b1b91906113c2565b6030610b279190611187565b60f81b818381518110610b63577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610b9f91906111dd565b9450610af7565b8093505050505b919050565b610bba610d1d565b73ffffffffffffffffffffffffffffffffffffffff16610bd861075e565b73ffffffffffffffffffffffffffffffffffffffff1614610c2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2590611109565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600033905090565b600081359050610d3481611613565b92915050565b600081359050610d498161162a565b92915050565b60008083601f840112610d6157600080fd5b8235905067ffffffffffffffff811115610d7a57600080fd5b602083019150836001820283011115610d9257600080fd5b9250929050565b600060208284031215610dab57600080fd5b6000610db984828501610d25565b91505092915050565b600060208284031215610dd457600080fd5b6000610de284828501610d3a565b91505092915050565b60008060208385031215610dfe57600080fd5b600083013567ffffffffffffffff811115610e1857600080fd5b610e2485828601610d4f565b92509250509250929050565b610e398161129c565b82525050565b610e48816112ae565b82525050565b610e5f610e5a826112ba565b6113b8565b82525050565b6000610e7082611144565b610e7a818561115a565b9350610e8a81856020860161133c565b610e9381611451565b840191505092915050565b6000610ea98261114f565b610eb3818561116b565b9350610ec381856020860161133c565b610ecc81611451565b840191505092915050565b6000610ee28261114f565b610eec818561117c565b9350610efc81856020860161133c565b80840191505092915050565b6000610f1560268361116b565b9150610f2082611462565b604082019050919050565b6000610f3860c08361117c565b9150610f43826114b1565b60c082019050919050565b6000610f5b60018361117c565b9150610f6682611598565b600182019050919050565b6000610f7e60208361116b565b9150610f89826115c1565b602082019050919050565b6000610fa1600b8361117c565b9150610fac826115ea565b600b82019050919050565b610fc081611332565b82525050565b6000610fd28285610ed7565b9150610fde8284610ed7565b91508190509392505050565b6000610ff68287610ed7565b915061100182610f4e565b915061100d8286610e4e565b60018201915061101d8285610ed7565b915061102882610f4e565b91506110348284610ed7565b915081905095945050505050565b600061104d82610f2b565b91506110598284610ed7565b915061106482610f94565b915081905092915050565b60006020820190506110846000830184610e30565b92915050565b600060208201905061109f6000830184610e3f565b92915050565b600060208201905081810360008301526110bf8184610e65565b905092915050565b600060208201905081810360008301526110e18184610e9e565b905092915050565b6000602082019050818103600083015261110281610f08565b9050919050565b6000602082019050818103600083015261112281610f71565b9050919050565b600060208201905061113e6000830184610fb7565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061119282611332565b915061119d83611332565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111d2576111d16113f3565b5b828201905092915050565b60006111e882611332565b91506111f383611332565b92508261120357611202611422565b5b828204905092915050565b600061121982611332565b915061122483611332565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561125d5761125c6113f3565b5b828202905092915050565b600061127382611332565b915061127e83611332565b925082821015611291576112906113f3565b5b828203905092915050565b60006112a782611312565b9050919050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561135a57808201518184015260208101905061133f565b83811115611369576000848401525b50505050565b600061137a82611332565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113ad576113ac6113f3565b5b600182019050919050565b6000819050919050565b60006113cd82611332565b91506113d883611332565b9250826113e8576113e7611422565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060008201527f30302f737667222077696474683d2232383822206865696768743d223238382260208201527f207374796c653d226261636b67726f756e643a23463146314631223e3c70617460408201527f682066696c6c3d226e6f6e6522207374726f6b653d22626c61636b222073747260608201527f6f6b652d77696474683d223222207374726f6b652d6c696e656361703d22726f60808201527f756e6422207374726f6b652d6c696e656a6f696e3d22726f756e642220643d2260a082015250565b7f2000000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f22202f3e203c2f7376673e000000000000000000000000000000000000000000600082015250565b61161c8161129c565b811461162757600080fd5b50565b611633816112e6565b811461163e57600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f697066733a2f2f6261666b72656968326a6c7878687a6466337a7077766d746f323561706373756f346b656e677332683770616e766f746d356c776f707063653234a2646970667358221220a919db2ca55842c9fe554c18ccc47e92e191121b031cd68f1fdc0d88998437a564736f6c63430008040033';

type PathRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PathRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PathRenderer__factory extends ContractFactory {
  constructor(...args: PathRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<PathRenderer> {
    return super.deploy(overrides || {}) as Promise<PathRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PathRenderer {
    return super.attach(address) as PathRenderer;
  }
  override connect(signer: Signer): PathRenderer__factory {
    return super.connect(signer) as PathRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PathRendererInterface {
    return new utils.Interface(_abi) as PathRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): PathRenderer {
    return new Contract(address, _abi, signerOrProvider) as PathRenderer;
  }
}
