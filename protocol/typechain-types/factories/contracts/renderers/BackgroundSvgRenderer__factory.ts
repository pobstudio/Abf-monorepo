/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type { PromiseOrValue } from '../../../common';
import type {
  BackgroundSvgRenderer,
  BackgroundSvgRendererInterface,
} from '../../../contracts/renderers/BackgroundSvgRenderer';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'propsSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renderType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6117488061010d6000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c8063715018a611610066578063715018a61461016e57806381612ceb146101785780638da5cb5b1461019657806392348b22146101b4578063f2fde38b146101d25761009d565b8062a85d69146100a257806301ffc9a7146100c057806306fdde03146100f0578063316df61e1461010e57806343c5820c1461013e575b600080fd5b6100aa6101ee565b6040516100b791906110e9565b60405180910390f35b6100da60048036038101906100d59190610cb3565b6101f7565b6040516100e79190610ff3565b60405180910390f35b6100f8610271565b6040516101059190611067565b60405180910390f35b61012860048036038101906101239190610cdc565b6102ae565b6040516101359190611067565b60405180910390f35b61015860048036038101906101539190610cdc565b6102e9565b6040516101659190611045565b60405180910390f35b61017661052f565b005b610180610543565b60405161018d9190611067565b60405180910390f35b61019e610580565b6040516101ab9190610fd8565b60405180910390f35b6101bc61058f565b6040516101c99190611067565b60405180910390f35b6101ec60048036038101906101e79190610c8a565b6105af565b005b60006007905090565b60007fea0d9bea000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061026a575061026982610633565b5b9050919050565b60606040518060400160405280600e81526020017f4261636b67726f756e6420537667000000000000000000000000000000000000815250905090565b60606102c26102bd84846102e9565b61069d565b6040516020016102d29190610fb6565b604051602081830303815290604052905092915050565b6060600061033c84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506000610827565b9050600061038f85858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506002610827565b905061039e8261ffff1661088e565b6103ab8261ffff1661088e565b73__$8d2f2c422d7739f572e222809bbf6b68c3$__635f47386a888860048181106103ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b89896005818110610443577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b8a8a6006818110610487577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b6040518463ffffffff1660e01b81526004016104af9392919061100e565b60006040518083038186803b1580156104c757600080fd5b505af41580156104db573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105049190610d21565b60405160200161051693929190610f59565b6040516020818303038152906040529250505092915050565b610537610a3b565b6105416000610ab9565b565b60606040518060400160405280600581526020017f696d616765000000000000000000000000000000000000000000000000000000815250905090565b600061058a610b7d565b905090565b60606040518060800160405280604281526020016116d160429139905090565b6105b7610a3b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610627576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061e90611089565b60405180910390fd5b61063081610ab9565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606000825114156106c057604051806020016040528060008152509050610822565b600060405180606001604052806040815260200161169160409139905060006003600285516106ef919061119d565b6106f991906111f3565b60046107059190611224565b67ffffffffffffffff811115610744577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156107765781602001600182028036833780820191505090505b509050600182016020820185865187015b808210156107e2576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845360018401935050610787565b50506003865106600181146107fe576002811461081157610819565b603d6001830353603d6002830353610819565b603d60018303535b50505080925050505b919050565b6000600282610836919061119d565b83511015610879576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610870906110a9565b60405180910390fd5b60008260028501015190508091505092915050565b606060008214156108d6576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610a36565b600082905060005b600082146109085780806108f1906113b6565b915050600a8261090191906111f3565b91506108de565b60008167ffffffffffffffff81111561094a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561097c5781602001600182028036833780820191505090505b5090505b60008514610a2f57600182610995919061127e565b9150600a856109a491906113ff565b60306109b0919061119d565b60f81b8183815181106109ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610a2891906111f3565b9450610980565b8093505050505b919050565b610a43610ba6565b73ffffffffffffffffffffffffffffffffffffffff16610a61610580565b73ffffffffffffffffffffffffffffffffffffffff1614610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae906110c9565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600033905090565b6000610bc1610bbc84611129565b611104565b905082815260208101848484011115610bd957600080fd5b610be4848285611352565b509392505050565b600081359050610bfb81611662565b92915050565b600081359050610c1081611679565b92915050565b60008083601f840112610c2857600080fd5b8235905067ffffffffffffffff811115610c4157600080fd5b602083019150836001820283011115610c5957600080fd5b9250929050565b600082601f830112610c7157600080fd5b8151610c81848260208601610bae565b91505092915050565b600060208284031215610c9c57600080fd5b6000610caa84828501610bec565b91505092915050565b600060208284031215610cc557600080fd5b6000610cd384828501610c01565b91505092915050565b60008060208385031215610cef57600080fd5b600083013567ffffffffffffffff811115610d0957600080fd5b610d1585828601610c16565b92509250509250929050565b600060208284031215610d3357600080fd5b600082015167ffffffffffffffff811115610d4d57600080fd5b610d5984828501610c60565b91505092915050565b610d6b816112b2565b82525050565b610d7a816112c4565b82525050565b610d89816112d0565b82525050565b6000610d9a8261115a565b610da48185611170565b9350610db4818560208601611352565b610dbd816114bd565b840191505092915050565b6000610dd382611165565b610ddd8185611181565b9350610ded818560208601611352565b610df6816114bd565b840191505092915050565b6000610e0c82611165565b610e168185611192565b9350610e26818560208601611352565b80840191505092915050565b6000610e3f602683611181565b9150610e4a826114ce565b604082019050919050565b6000610e62601483611181565b9150610e6d8261151d565b602082019050919050565b6000610e85600a83611192565b9150610e9082611546565b600a82019050919050565b6000610ea8600883611192565b9150610eb38261156f565b600882019050919050565b6000610ecb602083611181565b9150610ed682611598565b602082019050919050565b6000610eee602f83611192565b9150610ef9826115c1565b602f82019050919050565b6000610f11601483611192565b9150610f1c82611610565b601482019050919050565b6000610f34601a83611192565b9150610f3f82611639565b601a82019050919050565b610f5381611348565b82525050565b6000610f6482610ee1565b9150610f708286610e01565b9150610f7b82610e78565b9150610f878285610e01565b9150610f9282610f04565b9150610f9e8284610e01565b9150610fa982610e9b565b9150819050949350505050565b6000610fc182610f27565b9150610fcd8284610e01565b915081905092915050565b6000602082019050610fed6000830184610d62565b92915050565b60006020820190506110086000830184610d71565b92915050565b60006060820190506110236000830186610d80565b6110306020830185610d80565b61103d6040830184610d80565b949350505050565b6000602082019050818103600083015261105f8184610d8f565b905092915050565b600060208201905081810360008301526110818184610dc8565b905092915050565b600060208201905081810360008301526110a281610e32565b9050919050565b600060208201905081810360008301526110c281610e55565b9050919050565b600060208201905081810360008301526110e281610ebe565b9050919050565b60006020820190506110fe6000830184610f4a565b92915050565b600061110e61111f565b905061111a8282611385565b919050565b6000604051905090565b600067ffffffffffffffff8211156111445761114361148e565b5b61114d826114bd565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006111a882611348565b91506111b383611348565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111e8576111e7611430565b5b828201905092915050565b60006111fe82611348565b915061120983611348565b9250826112195761121861145f565b5b828204905092915050565b600061122f82611348565b915061123a83611348565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561127357611272611430565b5b828202905092915050565b600061128982611348565b915061129483611348565b9250828210156112a7576112a6611430565b5b828203905092915050565b60006112bd82611328565b9050919050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015611370578082015181840152602081019050611355565b8381111561137f576000848401525b50505050565b61138e826114bd565b810181811067ffffffffffffffff821117156113ad576113ac61148e565b5b80604052505050565b60006113c182611348565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113f4576113f3611430565b5b600182019050919050565b600061140a82611348565b915061141583611348565b9250826114255761142461145f565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f746f55696e7431365f6f75744f66426f756e6473000000000000000000000000600082015250565b7f22206865696768743d2200000000000000000000000000000000000000000000600082015250565b7f223e3c2f7376673e000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060008201527f30302f737667222077696474683d220000000000000000000000000000000000602082015250565b7f22207374796c653d226261636b67726f756e643a000000000000000000000000600082015250565b7f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000600082015250565b61166b816112b2565b811461167657600080fd5b50565b611682816112fc565b811461168d57600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f697066733a2f2f6261666b72656968643735726f6f6b707337657863627a637a7472796a7078346272747672737a336b766665687a356c7378357871333634753661a26469706673582212208132220f5404323317a2e1e7a9016ef2dd654fecd06798889707bb86e0d5ea9064736f6c63430008040033';

type BackgroundSvgRendererConstructorParams =
  | [
      linkLibraryAddresses: BackgroundSvgRendererLibraryAddresses,
      signer?: Signer,
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BackgroundSvgRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class BackgroundSvgRenderer__factory extends ContractFactory {
  constructor(...args: BackgroundSvgRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        BackgroundSvgRenderer__factory.linkBytecode(linkLibraryAddresses),
        signer,
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: BackgroundSvgRendererLibraryAddresses,
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$8d2f2c422d7739f572e222809bbf6b68c3\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/SvgUtils.sol:SvgUtils']
        .replace(/^0x/, '')
        .toLowerCase(),
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<BackgroundSvgRenderer> {
    return super.deploy(overrides || {}) as Promise<BackgroundSvgRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BackgroundSvgRenderer {
    return super.attach(address) as BackgroundSvgRenderer;
  }
  override connect(signer: Signer): BackgroundSvgRenderer__factory {
    return super.connect(signer) as BackgroundSvgRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BackgroundSvgRendererInterface {
    return new utils.Interface(_abi) as BackgroundSvgRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): BackgroundSvgRenderer {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as BackgroundSvgRenderer;
  }
}

export interface BackgroundSvgRendererLibraryAddresses {
  ['contracts/libraries/SvgUtils.sol:SvgUtils']: string;
}
