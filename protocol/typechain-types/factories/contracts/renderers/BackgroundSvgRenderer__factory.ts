/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type { PromiseOrValue } from '../../../common';
import type {
  BackgroundSvgRenderer,
  BackgroundSvgRendererInterface,
} from '../../../contracts/renderers/BackgroundSvgRenderer';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'attributes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'propsSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renderAttributeKey',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6119268061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c8063715018a611610071578063715018a6146101795780638da5cb5b1461018357806392348b22146101a1578063b0a2f640146101bf578063effde6db146101ef578063f2fde38b1461020d576100a8565b8062a85d69146100ad57806301ffc9a7146100cb57806306fdde03146100fb578063316df61e1461011957806343c5820c14610149575b600080fd5b6100b5610229565b6040516100c2919061124f565b60405180910390f35b6100e560048036038101906100e09190610da6565b610232565b6040516100f29190611159565b60405180910390f35b6101036102ac565b60405161011091906111cd565b60405180910390f35b610133600480360381019061012e9190610dcf565b6102e9565b60405161014091906111cd565b60405180910390f35b610163600480360381019061015e9190610dcf565b610324565b60405161017091906111ab565b60405180910390f35b61018161056a565b005b61018b61057e565b604051610198919061113e565b60405180910390f35b6101a961058d565b6040516101b691906111cd565b60405180910390f35b6101d960048036038101906101d49190610dcf565b6105ad565b6040516101e691906111cd565b60405180910390f35b6101f7610665565b60405161020491906111cd565b60405180910390f35b61022760048036038101906102229190610d7d565b6106a2565b005b60006007905090565b60007f3433a79a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102a557506102a482610726565b5b9050919050565b60606040518060400160405280600e81526020017f4261636b67726f756e6420537667000000000000000000000000000000000000815250905090565b60606102fd6102f88484610324565b610790565b60405160200161030d919061111c565b604051602081830303815290604052905092915050565b6060600061037784848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050600061091a565b905060006103ca85858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050600261091a565b90506103d98261ffff16610981565b6103e68261ffff16610981565b73__$8d2f2c422d7739f572e222809bbf6b68c3$__635f47386a8888600481811061043a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b8989600581811061047e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b8a8a60068181106104c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b6040518463ffffffff1660e01b81526004016104ea93929190611174565b60006040518083038186803b15801561050257600080fd5b505af4158015610516573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061053f9190610e14565b60405160200161055193929190611092565b6040516020818303038152906040529250505092915050565b610572610b2e565b61057c6000610bac565b565b6000610588610c70565b905090565b60606040518060800160405280604281526020016118af60429139905090565b606060005b600060f81b8484838181106105f0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461063457808061062c9061151c565b9150506105b2565b61063d81610981565b60405160200161064d91906110ef565b60405160208183030381529060405291505092915050565b60606040518060400160405280600581526020017f696d616765000000000000000000000000000000000000000000000000000000815250905090565b6106aa610b2e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561071a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610711906111ef565b60405180910390fd5b61072381610bac565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606000825114156107b357604051806020016040528060008152509050610915565b600060405180606001604052806040815260200161186f60409139905060006003600285516107e29190611303565b6107ec9190611359565b60046107f8919061138a565b67ffffffffffffffff811115610837577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156108695781602001600182028036833780820191505090505b509050600182016020820185865187015b808210156108d5576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f811685015184536001840193505061087a565b50506003865106600181146108f157600281146109045761090c565b603d6001830353603d600283035361090c565b603d60018303535b50505080925050505b919050565b60006002826109299190611303565b8351101561096c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109639061120f565b60405180910390fd5b60008260028501015190508091505092915050565b606060008214156109c9576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610b29565b600082905060005b600082146109fb5780806109e49061151c565b915050600a826109f49190611359565b91506109d1565b60008167ffffffffffffffff811115610a3d577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610a6f5781602001600182028036833780820191505090505b5090505b60008514610b2257600182610a8891906113e4565b9150600a85610a979190611565565b6030610aa39190611303565b60f81b818381518110610adf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610b1b9190611359565b9450610a73565b8093505050505b919050565b610b36610c99565b73ffffffffffffffffffffffffffffffffffffffff16610b5461057e565b73ffffffffffffffffffffffffffffffffffffffff1614610baa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba19061122f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600033905090565b6000610cb4610caf8461128f565b61126a565b905082815260208101848484011115610ccc57600080fd5b610cd78482856114b8565b509392505050565b600081359050610cee81611840565b92915050565b600081359050610d0381611857565b92915050565b60008083601f840112610d1b57600080fd5b8235905067ffffffffffffffff811115610d3457600080fd5b602083019150836001820283011115610d4c57600080fd5b9250929050565b600082601f830112610d6457600080fd5b8151610d74848260208601610ca1565b91505092915050565b600060208284031215610d8f57600080fd5b6000610d9d84828501610cdf565b91505092915050565b600060208284031215610db857600080fd5b6000610dc684828501610cf4565b91505092915050565b60008060208385031215610de257600080fd5b600083013567ffffffffffffffff811115610dfc57600080fd5b610e0885828601610d09565b92509250509250929050565b600060208284031215610e2657600080fd5b600082015167ffffffffffffffff811115610e4057600080fd5b610e4c84828501610d53565b91505092915050565b610e5e81611418565b82525050565b610e6d8161142a565b82525050565b610e7c81611436565b82525050565b6000610e8d826112c0565b610e9781856112d6565b9350610ea78185602086016114b8565b610eb081611623565b840191505092915050565b6000610ec6826112cb565b610ed081856112e7565b9350610ee08185602086016114b8565b610ee981611623565b840191505092915050565b6000610eff826112cb565b610f0981856112f8565b9350610f198185602086016114b8565b80840191505092915050565b6000610f326026836112e7565b9150610f3d82611634565b604082019050919050565b6000610f556014836112e7565b9150610f6082611683565b602082019050919050565b6000610f78600a836112f8565b9150610f83826116ac565b600a82019050919050565b6000610f9b6008836112f8565b9150610fa6826116d5565b600882019050919050565b6000610fbe6001836112f8565b9150610fc9826116fe565b600182019050919050565b6000610fe16020836112e7565b9150610fec82611727565b602082019050919050565b6000611004602f836112f8565b915061100f82611750565b602f82019050919050565b60006110276014836112f8565b91506110328261179f565b601482019050919050565b600061104a6026836112f8565b9150611055826117c8565b602682019050919050565b600061106d601a836112f8565b915061107882611817565b601a82019050919050565b61108c816114ae565b82525050565b600061109d82610ff7565b91506110a98286610ef4565b91506110b482610f6b565b91506110c08285610ef4565b91506110cb8261101a565b91506110d78284610ef4565b91506110e282610f8e565b9150819050949350505050565b60006110fa8261103d565b91506111068284610ef4565b915061111182610fb1565b915081905092915050565b600061112782611060565b91506111338284610ef4565b915081905092915050565b60006020820190506111536000830184610e55565b92915050565b600060208201905061116e6000830184610e64565b92915050565b60006060820190506111896000830186610e73565b6111966020830185610e73565b6111a36040830184610e73565b949350505050565b600060208201905081810360008301526111c58184610e82565b905092915050565b600060208201905081810360008301526111e78184610ebb565b905092915050565b6000602082019050818103600083015261120881610f25565b9050919050565b6000602082019050818103600083015261122881610f48565b9050919050565b6000602082019050818103600083015261124881610fd4565b9050919050565b60006020820190506112646000830184611083565b92915050565b6000611274611285565b905061128082826114eb565b919050565b6000604051905090565b600067ffffffffffffffff8211156112aa576112a96115f4565b5b6112b382611623565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061130e826114ae565b9150611319836114ae565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561134e5761134d611596565b5b828201905092915050565b6000611364826114ae565b915061136f836114ae565b92508261137f5761137e6115c5565b5b828204905092915050565b6000611395826114ae565b91506113a0836114ae565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113d9576113d8611596565b5b828202905092915050565b60006113ef826114ae565b91506113fa836114ae565b92508282101561140d5761140c611596565b5b828203905092915050565b60006114238261148e565b9050919050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156114d65780820151818401526020810190506114bb565b838111156114e5576000848401525b50505050565b6114f482611623565b810181811067ffffffffffffffff82111715611513576115126115f4565b5b80604052505050565b6000611527826114ae565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561155a57611559611596565b5b600182019050919050565b6000611570826114ae565b915061157b836114ae565b92508261158b5761158a6115c5565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f746f55696e7431365f6f75744f66426f756e6473000000000000000000000000600082015250565b7f22206865696768743d2200000000000000000000000000000000000000000000600082015250565b7f223e3c2f7376673e000000000000000000000000000000000000000000000000600082015250565b7f7d00000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060008201527f30302f737667222077696474683d220000000000000000000000000000000000602082015250565b7f22207374796c653d226261636b67726f756e643a000000000000000000000000600082015250565b7f7b2274726169745f74797065223a202244617461204c656e677468222c20227660008201527f616c7565223a0000000000000000000000000000000000000000000000000000602082015250565b7f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000600082015250565b61184981611418565b811461185457600080fd5b50565b61186081611462565b811461186b57600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f697066733a2f2f6261666b72656968643735726f6f6b707337657863627a637a7472796a7078346272747672737a336b766665687a356c7378357871333634753661a2646970667358221220fa31901b1ff91e00684a2a6a897fb87fbaa6e0033fa8fc77bc738b42e119d83d64736f6c63430008040033';

type BackgroundSvgRendererConstructorParams =
  | [
      linkLibraryAddresses: BackgroundSvgRendererLibraryAddresses,
      signer?: Signer,
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BackgroundSvgRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class BackgroundSvgRenderer__factory extends ContractFactory {
  constructor(...args: BackgroundSvgRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        BackgroundSvgRenderer__factory.linkBytecode(linkLibraryAddresses),
        signer,
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: BackgroundSvgRendererLibraryAddresses,
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$8d2f2c422d7739f572e222809bbf6b68c3\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/SvgUtils.sol:SvgUtils']
        .replace(/^0x/, '')
        .toLowerCase(),
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<BackgroundSvgRenderer> {
    return super.deploy(overrides || {}) as Promise<BackgroundSvgRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BackgroundSvgRenderer {
    return super.attach(address) as BackgroundSvgRenderer;
  }
  override connect(signer: Signer): BackgroundSvgRenderer__factory {
    return super.connect(signer) as BackgroundSvgRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BackgroundSvgRendererInterface {
    return new utils.Interface(_abi) as BackgroundSvgRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): BackgroundSvgRenderer {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as BackgroundSvgRenderer;
  }
}

export interface BackgroundSvgRendererLibraryAddresses {
  ['contracts/libraries/SvgUtils.sol:SvgUtils']: string;
}
