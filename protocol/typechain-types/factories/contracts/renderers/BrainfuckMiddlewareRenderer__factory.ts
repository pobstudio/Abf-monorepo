/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type { PromiseOrValue } from '../../../common';
import type {
  BrainfuckMiddlewareRenderer,
  BrainfuckMiddlewareRendererInterface,
} from '../../../contracts/renderers/BrainfuckMiddlewareRenderer';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_vm',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'propsSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renderType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'seed',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'constants',
        type: 'bytes32',
      },
    ],
    name: 'tokenSeed',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506040516200146938038062001469833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001e2565b92915050565b6000602082840312156200019557600080fd5b6000620001a5848285016200016b565b91505092915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001ed81620001ae565b8114620001f957600080fd5b50565b61125d806200020c6000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c8063644f6a3711610071578063644f6a3714610179578063715018a6146101a957806381612ceb146101b35780638da5cb5b146101d157806392348b22146101ef578063f2fde38b1461020d576100a8565b8062a85d69146100ad57806301ffc9a7146100cb57806306fdde03146100fb578063316df61e1461011957806343c5820c14610149575b600080fd5b6100b5610229565b6040516100c29190610e73565b60405180910390f35b6100e560048036038101906100e09190610aa5565b610251565b6040516100f29190610d57565b60405180910390f35b6101036102cb565b6040516101109190610df1565b60405180910390f35b610133600480360381019061012e9190610ace565b610308565b6040516101409190610df1565b60405180910390f35b610163600480360381019061015e9190610ace565b61031c565b6040516101709190610dcf565b60405180910390f35b610193600480360381019061018e9190610a56565b6104df565b6040516101a09190610dcf565b60405180910390f35b6101b1610534565b005b6101bb610548565b6040516101c89190610df1565b60405180910390f35b6101d9610585565b6040516101e69190610d3c565b60405180910390f35b6101f7610594565b6040516102049190610df1565b60405180910390f35b610227600480360381019061022291906109de565b6105d1565b005b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b60007fea0d9bea000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102c457506102c382610655565b5b9050919050565b60606040518060400160405280601481526020017f427261696e6675636b204d6964646c6577617265000000000000000000000000815250905090565b6060610314838361031c565b905092915050565b606060008073__$28521ce1df78ef016a7ec3a969dbd8d6e5$__63a705b8ab86866040518363ffffffff1660e01b815260040161035a929190610d72565b60606040518083038186803b15801561037257600080fd5b505af4158015610386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103aa9190610a07565b9250925050600061040086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505060546106bf565b60001b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329b9e6a58787607490809261045693929190610f2d565b6104618688876104df565b6040518463ffffffff1660e01b815260040161047f93929190610d96565b60006040518083038186803b15801561049757600080fd5b505afa1580156104ab573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104d49190610b13565b935050505092915050565b60608184846040516020016104f5929190610d10565b6040516020818303038152906040528051906020012060405160200161051c929190610ce4565b60405160208183030381529060405290509392505050565b61053c610726565b61054660006107a4565b565b60606040518060400160405280600a81526020017f6d6964646c657761726500000000000000000000000000000000000000000000815250905090565b600061058f610868565b905090565b60606040518060400160405280600b81526020017f697066733a2f2f544f444f000000000000000000000000000000000000000000815250905090565b6105d9610726565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610649576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064090610e13565b60405180910390fd5b610652816107a4565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006020826106ce9190610f60565b83511015610711576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070890610e33565b60405180910390fd5b60008260208501015190508091505092915050565b61072e610891565b73ffffffffffffffffffffffffffffffffffffffff1661074c610585565b73ffffffffffffffffffffffffffffffffffffffff16146107a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079990610e53565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600033905090565b60006108ac6108a784610eb3565b610e8e565b9050828152602081018484840111156108c457600080fd5b6108cf848285611043565b509392505050565b6000813590506108e6816111cb565b92915050565b6000815190506108fb816111cb565b92915050565b600081359050610910816111e2565b92915050565b600081519050610925816111e2565b92915050565b60008135905061093a816111f9565b92915050565b60008083601f84011261095257600080fd5b8235905067ffffffffffffffff81111561096b57600080fd5b60208301915083600182028301111561098357600080fd5b9250929050565b600082601f83011261099b57600080fd5b81516109ab848260208601610899565b91505092915050565b6000813590506109c381611210565b92915050565b6000815190506109d881611210565b92915050565b6000602082840312156109f057600080fd5b60006109fe848285016108d7565b91505092915050565b600080600060608486031215610a1c57600080fd5b6000610a2a868287016108ec565b9350506020610a3b868287016109c9565b9250506040610a4c86828701610916565b9150509250925092565b600080600060608486031215610a6b57600080fd5b6000610a7986828701610901565b9350506020610a8a868287016109b4565b9250506040610a9b86828701610901565b9150509250925092565b600060208284031215610ab757600080fd5b6000610ac58482850161092b565b91505092915050565b60008060208385031215610ae157600080fd5b600083013567ffffffffffffffff811115610afb57600080fd5b610b0785828601610940565b92509250509250929050565b600060208284031215610b2557600080fd5b600082015167ffffffffffffffff811115610b3f57600080fd5b610b4b8482850161098a565b91505092915050565b610b5d81610fb6565b82525050565b610b6c81610fc8565b82525050565b610b83610b7e82610fd4565b6110a7565b82525050565b6000610b958385610efa565b9350610ba2838584611034565b610bab83611119565b840190509392505050565b6000610bc28385610f0b565b9350610bcf838584611034565b610bd883611119565b840190509392505050565b6000610bee82610ee4565b610bf88185610efa565b9350610c08818560208601611043565b610c1181611119565b840191505092915050565b6000610c2782610eef565b610c318185610f1c565b9350610c41818560208601611043565b610c4a81611119565b840191505092915050565b6000610c62602683610f1c565b9150610c6d8261112a565b604082019050919050565b6000610c85601583610f1c565b9150610c9082611179565b602082019050919050565b6000610ca8602083610f1c565b9150610cb3826111a2565b602082019050919050565b610cc78161102a565b82525050565b610cde610cd98261102a565b6110b1565b82525050565b6000610cf08285610b72565b602082019150610d008284610b72565b6020820191508190509392505050565b6000610d1c8285610b72565b602082019150610d2c8284610ccd565b6020820191508190509392505050565b6000602082019050610d516000830184610b54565b92915050565b6000602082019050610d6c6000830184610b63565b92915050565b60006020820190508181036000830152610d8d818486610bb6565b90509392505050565b60006040820190508181036000830152610db1818587610b89565b90508181036020830152610dc58184610be3565b9050949350505050565b60006020820190508181036000830152610de98184610be3565b905092915050565b60006020820190508181036000830152610e0b8184610c1c565b905092915050565b60006020820190508181036000830152610e2c81610c55565b9050919050565b60006020820190508181036000830152610e4c81610c78565b9050919050565b60006020820190508181036000830152610e6c81610c9b565b9050919050565b6000602082019050610e886000830184610cbe565b92915050565b6000610e98610ea9565b9050610ea48282611076565b919050565b6000604051905090565b600067ffffffffffffffff821115610ece57610ecd6110ea565b5b610ed782611119565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60008085851115610f3d57600080fd5b83861115610f4a57600080fd5b6001850283019150848603905094509492505050565b6000610f6b8261102a565b9150610f768361102a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fab57610faa6110bb565b5b828201905092915050565b6000610fc18261100a565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611061578082015181840152602081019050611046565b83811115611070576000848401525b50505050565b61107f82611119565b810181811067ffffffffffffffff8211171561109e5761109d6110ea565b5b80604052505050565b6000819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f746f55696e743235365f6f75744f66426f756e64730000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6111d481610fb6565b81146111df57600080fd5b50565b6111eb81610fd4565b81146111f657600080fd5b50565b61120281610fde565b811461120d57600080fd5b50565b6112198161102a565b811461122457600080fd5b5056fea264697066735822122013a833f4ae7b2c72997e206bac99bb6f181beb45add6c8375dff8c2b0b17bc7264736f6c63430008040033';

type BrainfuckMiddlewareRendererConstructorParams =
  | [
      linkLibraryAddresses: BrainfuckMiddlewareRendererLibraryAddresses,
      signer?: Signer,
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BrainfuckMiddlewareRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class BrainfuckMiddlewareRenderer__factory extends ContractFactory {
  constructor(...args: BrainfuckMiddlewareRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        BrainfuckMiddlewareRenderer__factory.linkBytecode(linkLibraryAddresses),
        signer,
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: BrainfuckMiddlewareRendererLibraryAddresses,
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$28521ce1df78ef016a7ec3a969dbd8d6e5\\$__', 'g'),
      linkLibraryAddresses[
        'contracts/AbsBrainFuckURIConstructor.sol:AbsBrainFuckURIConstructor'
      ]
        .replace(/^0x/, '')
        .toLowerCase(),
    );

    return linkedBytecode;
  }

  override deploy(
    _vm: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<BrainfuckMiddlewareRenderer> {
    return super.deploy(
      _vm,
      overrides || {},
    ) as Promise<BrainfuckMiddlewareRenderer>;
  }
  override getDeployTransaction(
    _vm: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_vm, overrides || {});
  }
  override attach(address: string): BrainfuckMiddlewareRenderer {
    return super.attach(address) as BrainfuckMiddlewareRenderer;
  }
  override connect(signer: Signer): BrainfuckMiddlewareRenderer__factory {
    return super.connect(signer) as BrainfuckMiddlewareRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BrainfuckMiddlewareRendererInterface {
    return new utils.Interface(_abi) as BrainfuckMiddlewareRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): BrainfuckMiddlewareRenderer {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as BrainfuckMiddlewareRenderer;
  }
}

export interface BrainfuckMiddlewareRendererLibraryAddresses {
  ['contracts/AbsBrainFuckURIConstructor.sol:AbsBrainFuckURIConstructor']: string;
}
