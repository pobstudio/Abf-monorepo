/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type { PromiseOrValue } from '../../../common';
import type {
  GifImageRenderer,
  GifImageRendererInterface,
} from '../../../contracts/renderers/GifImageRenderer';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'GRAPHIC_CONTROL_EXTENSION',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'HEIGHT_INDEX',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'IMAGE_DATA_CHUNK_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'IMAGE_DESCRIPTOR',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'NUM_COLORS_INDEX',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'WIDTH_INDEX',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'propsSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renderType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052607e60015560006002556001600355600260045534801561002457600080fd5b5061004161003661004660201b60201c565b61004e60201b60201c565b610112565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611cec806101216000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c8063715018a6116100975780639f3ab490116100665780639f3ab4901461028e578063a4543321146102ac578063d6ac7434146102ca578063f2fde38b146102e8576100ff565b8063715018a61461022a57806381612ceb146102345780638da5cb5b1461025257806392348b2214610270576100ff565b80632507de41116100d35780632507de411461018e578063316df61e146101ac57806343c5820c146101dc5780636e266add1461020c576100ff565b8062a85d691461010457806301ffc9a71461012257806306fdde0314610152578063226aa21714610170575b600080fd5b61010c610304565b604051610119919061168f565b60405180910390f35b61013c600480360381019061013791906110de565b61032c565b60405161014991906115d0565b60405180910390f35b61015a6103a6565b604051610167919061160d565b60405180910390f35b6101786103e3565b604051610185919061168f565b60405180910390f35b6101966103e9565b6040516101a3919061168f565b60405180910390f35b6101c660048036038101906101c19190611107565b6103ef565b6040516101d3919061160d565b60405180910390f35b6101f660048036038101906101f19190611107565b61042a565b60405161020391906115eb565b60405180910390f35b610214610613565b60405161022191906115eb565b60405180910390f35b61023261064c565b005b61023c610660565b604051610249919061160d565b60405180910390f35b61025a61069d565b60405161026791906115b5565b60405180910390f35b6102786106ac565b604051610285919061160d565b60405180910390f35b6102966106cc565b6040516102a3919061168f565b60405180910390f35b6102b46106d2565b6040516102c191906115eb565b60405180910390f35b6102d261070b565b6040516102df919061168f565b60405180910390f35b61030260048036038101906102fd91906110b5565b610711565b005b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b60007fea0d9bea000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061039f575061039e82610795565b5b9050919050565b60606040518060400160405280601081526020017f53696e676c65206672616d652067696600000000000000000000000000000000815250905090565b60045481565b60035481565b60606104036103fe848461042a565b6107ff565b604051602001610413919061152a565b604051602081830303815290604052905092915050565b6060600060405180602001604052806000815250905060006003858560045481811061047f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c6104969190611843565b60036104a29190611781565b60ff1690505b84849050811015610591576000600154826104c3919061172b565b90506000868684908989905085116104db57846104e0565b898990505b926104ed939291906116f8565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905083878790508311610544576001610547565b60025b60ff168251610556919061172b565b826040516020016105699392919061149d565b604051602081830303815290604052935050506001548161058a919061172b565b90506104a8565b5061059c8484610989565b6105a68585610a9a565b6040518060400160405280600881526020017f21f90401000000000000000000000000000000000000000000000000000000008152506105e68787610be7565b846040516020016105fb959493929190611447565b60405160208183030381529060405291505092915050565b6040518060400160405280600b81526020017f2c0000000080008000000700000000000000000000000000000000000000000081525081565b610654610c9b565b61065e6000610d19565b565b60606040518060400160405280600581526020017f696d616765000000000000000000000000000000000000000000000000000000815250905090565b60006106a7610ddd565b905090565b6060604051806080016040528060428152602001611c3560429139905090565b60015481565b6040518060400160405280600881526020017f21f904010000000000000000000000000000000000000000000000000000000081525081565b60025481565b610719610c9b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610789576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107809061162f565b60405180910390fd5b61079281610d19565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b606060008251141561082257604051806020016040528060008152509050610984565b6000604051806060016040528060408152602001611c776040913990506000600360028551610851919061172b565b61085b91906117b8565b600461086791906117e9565b67ffffffffffffffff8111156108a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156108d85781602001600182028036833780820191505090505b509050600182016020820185865187015b80821015610944576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f81168501518453600184019350506108e9565b505060038651066001811461096057600281146109735761097b565b603d6001830353603d600283035361097b565b603d60018303535b50505080925050505b919050565b606082826002548181106109c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b8383600354818110610a0b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b610a7160018686600454818110610a55577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c610a6c9190611781565b610e06565b604051602001610a839392919061154c565b604051602081830303815290604052905092915050565b606060008383600454818110610ad9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c9050600060038260ff16610b05600185610b009190611781565b610faf565b610b0f919061187e565b610b1991906117e9565b67ffffffffffffffff811115610b58577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610b8a5781602001600182028036833780820191505090505b5090508484600390600385610b9f9190611843565b6003610bab9190611781565b60ff1692610bbb939291906116f8565b82604051602001610bce93929190611421565b6040516020818303038152906040529250505092915050565b60608282600254818110610c24577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b8383600354818110610c69577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b604051602001610c849291906114dd565b604051602081830303815290604052905092915050565b610ca3611039565b73ffffffffffffffffffffffffffffffffffffffff16610cc161069d565b73ffffffffffffffffffffffffffffffffffffffff1614610d17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0e9061164f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060808260ff1610610e4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e459061166f565b60405180910390fd5b60408260ff161115610e82577ff6000000000000000000000000000000000000000000000000000000000000009050610faa565b60208260ff161115610eb6577ff5000000000000000000000000000000000000000000000000000000000000009050610faa565b60108260ff161115610eea577ff4000000000000000000000000000000000000000000000000000000000000009050610faa565b60088260ff161115610f1e577ff3000000000000000000000000000000000000000000000000000000000000009050610faa565b60048260ff161115610f52577ff2000000000000000000000000000000000000000000000000000000000000009050610faa565b60028260ff161115610f86577ff1000000000000000000000000000000000000000000000000000000000000009050610faa565b7ff00000000000000000000000000000000000000000000000000000000000000090505b919050565b600060408260ff161115610fc65760809050611034565b60208260ff161115610fdb5760409050611034565b60108260ff161115610ff05760209050611034565b60088260ff1611156110055760109050611034565b60048260ff16111561101a5760089050611034565b60028260ff16111561102f5760049050611034565b600290505b919050565b600033905090565b60008135905061105081611c06565b92915050565b60008135905061106581611c1d565b92915050565b60008083601f84011261107d57600080fd5b8235905067ffffffffffffffff81111561109657600080fd5b6020830191508360018202830111156110ae57600080fd5b9250929050565b6000602082840312156110c757600080fd5b60006110d584828501611041565b91505092915050565b6000602082840312156110f057600080fd5b60006110fe84828501611056565b91505092915050565b6000806020838503121561111a57600080fd5b600083013567ffffffffffffffff81111561113457600080fd5b6111408582860161106b565b92509250509250929050565b611155816118b2565b82525050565b611164816118c4565b82525050565b61117b611176826118d0565b6119a1565b82525050565b600061118d83856116d1565b935061119a83858461195f565b82840190509392505050565b60006111b1826116aa565b6111bb81856116c0565b93506111cb81856020860161196e565b6111d481611a1b565b840191505092915050565b60006111ea826116aa565b6111f481856116d1565b935061120481856020860161196e565b80840191505092915050565b600061121b826116b5565b61122581856116dc565b935061123581856020860161196e565b61123e81611a1b565b840191505092915050565b6000611254826116b5565b61125e81856116ed565b935061126e81856020860161196e565b80840191505092915050565b60006112876026836116dc565b915061129282611a39565b604082019050919050565b60006112aa6002836116ed565b91506112b582611a88565b600282019050919050565b60006112cd6001836116ed565b91506112d882611a91565b600182019050919050565b60006112f06005836116ed565b91506112fb82611aba565b600582019050919050565b60006113136020836116dc565b915061131e82611ae3565b602082019050919050565b60006113366003836116ed565b915061134182611b0c565b600382019050919050565b60006113596024836116dc565b915061136482611b33565b604082019050919050565b600061137c6001836116ed565b915061138782611b82565b600182019050919050565b600061139f6003836116ed565b91506113aa82611b8b565b600382019050919050565b60006113c26016836116ed565b91506113cd82611bb4565b601682019050919050565b60006113e56006836116ed565b91506113f082611bdd565b600682019050919050565b61140481611948565b82525050565b61141b61141682611952565b6119ab565b82525050565b600061142e828587611181565b915061143a82846111df565b9150819050949350505050565b600061145382886111df565b915061145f82876111df565b915061146b82866111df565b915061147782856111df565b915061148382846111df565b915061148e82611392565b91508190509695505050505050565b60006114a982866111df565b91506114b5828561140a565b6001820191506114c4826112c0565b91506114d082846111df565b9150819050949350505050565b60006114e8826112e3565b91506114f4828561116a565b6001820191506115038261136f565b915061150f828461116a565b60018201915061151e82611329565b91508190509392505050565b6000611535826113b5565b91506115418284611249565b915081905092915050565b6000611557826113d8565b9150611563828661116a565b6001820191506115728261136f565b915061157e828561116a565b60018201915061158d8261136f565b9150611599828461116a565b6001820191506115a88261129d565b9150819050949350505050565b60006020820190506115ca600083018461114c565b92915050565b60006020820190506115e5600083018461115b565b92915050565b6000602082019050818103600083015261160581846111a6565b905092915050565b600060208201905081810360008301526116278184611210565b905092915050565b600060208201905081810360008301526116488161127a565b9050919050565b6000602082019050818103600083015261166881611306565b9050919050565b600060208201905081810360008301526116888161134c565b9050919050565b60006020820190506116a460008301846113fb565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000808585111561170857600080fd5b8386111561171557600080fd5b6001850283019150848603905094509492505050565b600061173682611948565b915061174183611948565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611776576117756119bd565b5b828201905092915050565b600061178c82611952565b915061179783611952565b92508260ff038211156117ad576117ac6119bd565b5b828201905092915050565b60006117c382611948565b91506117ce83611948565b9250826117de576117dd6119ec565b5b828204905092915050565b60006117f482611948565b91506117ff83611948565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611838576118376119bd565b5b828202905092915050565b600061184e82611952565b915061185983611952565b92508160ff0483118215151615611873576118726119bd565b5b828202905092915050565b600061188982611948565b915061189483611948565b9250828210156118a7576118a66119bd565b5b828203905092915050565b60006118bd82611928565b9050919050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b8381101561198c578082015181840152602081019050611971565b8381111561199b576000848401525b50505050565b6000819050919050565b60006119b682611a2c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160f81b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60008082015250565b7f8000000000000000000000000000000000000000000000000000000000000000600082015250565b7f2c00000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7d070000000000000000000000000000000000000000000000000000000000600082015250565b7f4f6e6c792061206d6178696d756d206f662031323720636f6c6f727320616c6c60008201527f6f77656400000000000000000000000000000000000000000000000000000000602082015250565b60008082015250565b7f81003b0000000000000000000000000000000000000000000000000000000000600082015250565b7f646174613a696d6167652f6769663b6261736536342c00000000000000000000600082015250565b7f4749463839610000000000000000000000000000000000000000000000000000600082015250565b611c0f816118b2565b8114611c1a57600080fd5b50565b611c26816118fc565b8114611c3157600080fd5b5056fe697066733a2f2f6261666b7265696436336e757a79357779346c34326d65766c373364766b6e787078713335647761726a3437676e6d6d73373534696e626e6772614142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220c3af8708ae86cc7381d59d7816bc39094e3c6a32ff8303a0d697ad0e6b7b158664736f6c63430008040033';

type GifImageRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GifImageRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GifImageRenderer__factory extends ContractFactory {
  constructor(...args: GifImageRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<GifImageRenderer> {
    return super.deploy(overrides || {}) as Promise<GifImageRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GifImageRenderer {
    return super.attach(address) as GifImageRenderer;
  }
  override connect(signer: Signer): GifImageRenderer__factory {
    return super.connect(signer) as GifImageRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GifImageRendererInterface {
    return new utils.Interface(_abi) as GifImageRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): GifImageRenderer {
    return new Contract(address, _abi, signerOrProvider) as GifImageRenderer;
  }
}
