/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type { PromiseOrValue } from '../../../common';
import type {
  ImageTupleDataMiddlewareRenderer,
  ImageTupleDataMiddlewareRendererInterface,
} from '../../../contracts/renderers/ImageTupleDataMiddlewareRenderer';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'attributes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'propsSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renderAttributeKey',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'props',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114078061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c8063715018a611610071578063715018a6146101795780638da5cb5b1461018357806392348b22146101a1578063b0a2f640146101bf578063effde6db146101ef578063f2fde38b1461020d576100a8565b8062a85d69146100ad57806301ffc9a7146100cb57806306fdde03146100fb578063316df61e1461011957806343c5820c14610149575b600080fd5b6100b5610229565b6040516100c29190611007565b60405180910390f35b6100e560048036038101906100e09190610ce0565b610251565b6040516100f29190610f48565b60405180910390f35b6101036102cb565b6040516101109190610f85565b60405180910390f35b610133600480360381019061012e9190610d09565b610308565b6040516101409190610f85565b60405180910390f35b610163600480360381019061015e9190610d09565b6103fd565b6040516101709190610f63565b60405180910390f35b6101816104f2565b005b61018b610506565b6040516101989190610f2d565b60405180910390f35b6101a9610515565b6040516101b69190610f85565b60405180910390f35b6101d960048036038101906101d49190610d09565b610535565b6040516101e69190610f85565b60405180910390f35b6101f761062a565b6040516102049190610f85565b60405180910390f35b61022760048036038101906102229190610cb7565b610667565b005b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b60007f3433a79a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102c457506102c3826106eb565b5b9050919050565b60606040518060400160405280601581526020017f5475706c652044617461204d6964646c65776172650000000000000000000000815250905090565b6060600061035b84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506000610755565b90508073ffffffffffffffffffffffffffffffffffffffff1663316df61e61038386866107cb565b6040518263ffffffff1660e01b815260040161039f9190610f63565b60006040518083038186803b1580156103b757600080fd5b505afa1580156103cb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103f49190610d8f565b91505092915050565b6060600061045084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506000610755565b90508073ffffffffffffffffffffffffffffffffffffffff166343c5820c61047886866107cb565b6040518263ffffffff1660e01b81526004016104949190610f63565b60006040518083038186803b1580156104ac57600080fd5b505afa1580156104c0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104e99190610d4e565b91505092915050565b6104fa610a00565b6105046000610a7e565b565b6000610510610b42565b905090565b606060405180608001604052806042815260200161139060429139905090565b6060600061058884848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506000610755565b90508073ffffffffffffffffffffffffffffffffffffffff1663b0a2f6406105b086866107cb565b6040518263ffffffff1660e01b81526004016105cc9190610f63565b60006040518083038186803b1580156105e457600080fd5b505afa1580156105f8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106219190610d8f565b91505092915050565b60606040518060400160405280600581526020017f696d616765000000000000000000000000000000000000000000000000000000815250905090565b61066f610a00565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d690610fa7565b60405180910390fd5b6106e881610a7e565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600060148261076491906110ec565b835110156107a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079e90610fe7565b60405180910390fd5b60006c01000000000000000000000000836020860101510490508091505092915050565b60606000601490505b838390508110156109f957600084848381811061081a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c60ff1667ffffffffffffffff811115610869577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561089b5781602001600182028036833780820191505090505b50905060005b8585848181106108da577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c60ff168160ff1610156109bf57858560018561090391906110ec565b818110610939577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b828260ff168151811061097f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350806109b890611227565b90506108a1565b5082816040516020016109d3929190610f09565b6040516020818303038152906040529250506002816109f291906110ec565b90506107d4565b5092915050565b610a08610b6b565b73ffffffffffffffffffffffffffffffffffffffff16610a26610506565b73ffffffffffffffffffffffffffffffffffffffff1614610a7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7390610fc7565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600033905090565b6000610b86610b8184611047565b611022565b905082815260208101848484011115610b9e57600080fd5b610ba98482856111c3565b509392505050565b6000610bc4610bbf84611078565b611022565b905082815260208101848484011115610bdc57600080fd5b610be78482856111c3565b509392505050565b600081359050610bfe81611361565b92915050565b600081359050610c1381611378565b92915050565b60008083601f840112610c2b57600080fd5b8235905067ffffffffffffffff811115610c4457600080fd5b602083019150836001820283011115610c5c57600080fd5b9250929050565b600082601f830112610c7457600080fd5b8151610c84848260208601610b73565b91505092915050565b600082601f830112610c9e57600080fd5b8151610cae848260208601610bb1565b91505092915050565b600060208284031215610cc957600080fd5b6000610cd784828501610bef565b91505092915050565b600060208284031215610cf257600080fd5b6000610d0084828501610c04565b91505092915050565b60008060208385031215610d1c57600080fd5b600083013567ffffffffffffffff811115610d3657600080fd5b610d4285828601610c19565b92509250509250929050565b600060208284031215610d6057600080fd5b600082015167ffffffffffffffff811115610d7a57600080fd5b610d8684828501610c63565b91505092915050565b600060208284031215610da157600080fd5b600082015167ffffffffffffffff811115610dbb57600080fd5b610dc784828501610c8d565b91505092915050565b610dd981611142565b82525050565b610de881611154565b82525050565b6000610df9826110a9565b610e0381856110bf565b9350610e138185602086016111c3565b610e1c816112af565b840191505092915050565b6000610e32826110a9565b610e3c81856110d0565b9350610e4c8185602086016111c3565b80840191505092915050565b6000610e63826110b4565b610e6d81856110db565b9350610e7d8185602086016111c3565b610e86816112af565b840191505092915050565b6000610e9e6026836110db565b9150610ea9826112c0565b604082019050919050565b6000610ec16020836110db565b9150610ecc8261130f565b602082019050919050565b6000610ee46015836110db565b9150610eef82611338565b602082019050919050565b610f03816111ac565b82525050565b6000610f158285610e27565b9150610f218284610e27565b91508190509392505050565b6000602082019050610f426000830184610dd0565b92915050565b6000602082019050610f5d6000830184610ddf565b92915050565b60006020820190508181036000830152610f7d8184610dee565b905092915050565b60006020820190508181036000830152610f9f8184610e58565b905092915050565b60006020820190508181036000830152610fc081610e91565b9050919050565b60006020820190508181036000830152610fe081610eb4565b9050919050565b6000602082019050818103600083015261100081610ed7565b9050919050565b600060208201905061101c6000830184610efa565b92915050565b600061102c61103d565b905061103882826111f6565b919050565b6000604051905090565b600067ffffffffffffffff82111561106257611061611280565b5b61106b826112af565b9050602081019050919050565b600067ffffffffffffffff82111561109357611092611280565b5b61109c826112af565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006110f7826111ac565b9150611102836111ac565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561113757611136611251565b5b828201905092915050565b600061114d8261118c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156111e15780820151818401526020810190506111c6565b838111156111f0576000848401525b50505050565b6111ff826112af565b810181811067ffffffffffffffff8211171561121e5761121d611280565b5b80604052505050565b6000611232826111b6565b915060ff82141561124657611245611251565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f746f416464726573735f6f75744f66426f756e64730000000000000000000000600082015250565b61136a81611142565b811461137557600080fd5b50565b61138181611160565b811461138c57600080fd5b5056fe697066733a2f2f6261666b72656968636e6b69676e777835716b337235663432776f347a6570756e71323476746f786b766f337766706361666f6b79353735703475a264697066735822122051362e3796c1f4486dced3dd72327152f505e7ed12cc142e7a6ba2d69393d7ef64736f6c63430008040033';

type ImageTupleDataMiddlewareRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ImageTupleDataMiddlewareRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ImageTupleDataMiddlewareRenderer__factory extends ContractFactory {
  constructor(...args: ImageTupleDataMiddlewareRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ImageTupleDataMiddlewareRenderer> {
    return super.deploy(
      overrides || {},
    ) as Promise<ImageTupleDataMiddlewareRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ImageTupleDataMiddlewareRenderer {
    return super.attach(address) as ImageTupleDataMiddlewareRenderer;
  }
  override connect(signer: Signer): ImageTupleDataMiddlewareRenderer__factory {
    return super.connect(signer) as ImageTupleDataMiddlewareRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ImageTupleDataMiddlewareRendererInterface {
    return new utils.Interface(
      _abi,
    ) as ImageTupleDataMiddlewareRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ImageTupleDataMiddlewareRenderer {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as ImageTupleDataMiddlewareRenderer;
  }
}
