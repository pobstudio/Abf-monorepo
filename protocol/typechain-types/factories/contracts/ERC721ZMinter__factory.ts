/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type { PromiseOrValue } from '../../common';
import type {
  ERC721ZMinter,
  ERC721ZMinterInterface,
} from '../../contracts/ERC721ZMinter';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'isActive',
        type: 'bool',
      },
    ],
    name: 'ChangedIsActive',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'MAX_MINTING_PER_ADDRESS',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_MINTING_PER_WHITELIST_TOKEN',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'numMints',
        type: 'uint256',
      },
      {
        internalType: 'bytes32[]',
        name: 'proof',
        type: 'bytes32[]',
      },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'claimMerkleRoot',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'claimMerkleTreeURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_nft',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint96',
            name: 'royaltyFraction',
            type: 'uint96',
          },
          {
            internalType: 'address',
            name: 'whitelistToken',
            type: 'address',
          },
          {
            internalType: 'bytes32',
            name: 'claimMerkleRoot',
            type: 'bytes32',
          },
          {
            internalType: 'string',
            name: 'claimMerkleTreeURI',
            type: 'string',
          },
        ],
        internalType: 'struct ERC721ZMinter.InitConfig',
        name: 'config',
        type: 'tuple',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isActive',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isInit',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'numMints',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'mintCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nft',
    outputs: [
      {
        internalType: 'contract ERC721Z',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'price',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'royaltyFraction',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'royaltyTreasury',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_isActive',
        type: 'bool',
      },
    ],
    name: 'setIsActive',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_royaltyTreasury',
        type: 'address',
      },
    ],
    name: 'setRoyaltyTreasury',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_whitelistToken',
        type: 'address',
      },
    ],
    name: 'setWhitelistToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'whitelistToken',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040526000600560156101000a81548160ff0219169083151502179055503480156200002c57600080fd5b506200004d620000416200005a60201b60201c565b6200006260201b60201c565b6001808190555062000126565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6126e180620001366000396000f3fe60806040526004361061012a5760003560e01c8063715018a6116100ab578063afabc3231161006f578063afabc3231461038b578063b145a5b8146103b4578063d2b759c2146103df578063e7dee99f14610408578063ed9ec88814610433578063f2fde38b146104705761012a565b8063715018a6146102c85780638da5cb5b146102df578063938319fd1461030a5780639c4dab5214610335578063a035b1fe146103605761012a565b80633b98a7df116100f25780633b98a7df146102045780633d13f8741461022d57806340c10f191461025657806347ccca021461027257806354c796ed1461029d5761012a565b806305e9ca9b1461012f57806320ba1a0c1461015a57806322f3e2d4146101855780632750fc78146101b05780633a0b5888146101d9575b600080fd5b34801561013b57600080fd5b50610144610499565b6040516101519190611d66565b60405180910390f35b34801561016657600080fd5b5061016f6104bf565b60405161017c9190611dfb565b60405180910390f35b34801561019157600080fd5b5061019a61054d565b6040516101a79190611daa565b60405180910390f35b3480156101bc57600080fd5b506101d760048036038101906101d29190611a77565b610560565b005b3480156101e557600080fd5b506101ee6105cb565b6040516101fb9190611f5d565b60405180910390f35b34801561021057600080fd5b5061022b60048036038101906102269190611916565b6105d0565b005b34801561023957600080fd5b50610254600480360381019061024f9190611a0b565b61061c565b005b610270600480360381019061026b91906119cf565b61086b565b005b34801561027e57600080fd5b5061028761112c565b6040516102949190611de0565b60405180910390f35b3480156102a957600080fd5b506102b2611152565b6040516102bf9190611d66565b60405180910390f35b3480156102d457600080fd5b506102dd611178565b005b3480156102eb57600080fd5b506102f461118c565b6040516103019190611d66565b60405180910390f35b34801561031657600080fd5b5061031f6111b5565b60405161032c9190611f5d565b60405180910390f35b34801561034157600080fd5b5061034a6111ba565b6040516103579190611dc5565b60405180910390f35b34801561036c57600080fd5b506103756111c0565b6040516103829190611f5d565b60405180910390f35b34801561039757600080fd5b506103b260048036038101906103ad9190611916565b6111c6565b005b3480156103c057600080fd5b506103c9611212565b6040516103d69190611daa565b60405180910390f35b3480156103eb57600080fd5b5061040660048036038101906104019190611968565b611225565b005b34801561041457600080fd5b5061041d61136e565b60405161042a9190611f5d565b60405180910390f35b34801561043f57600080fd5b5061045a60048036038101906104559190611916565b611374565b6040516104679190611f5d565b60405180910390f35b34801561047c57600080fd5b5061049760048036038101906104929190611916565b61138c565b005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600980546104cc906121ec565b80601f01602080910402602001604051908101604052809291908181526020018280546104f8906121ec565b80156105455780601f1061051a57610100808354040283529160200191610545565b820191906000526020600020905b81548152906001019060200180831161052857829003601f168201915b505050505081565b600560149054906101000a900460ff1681565b610568611410565b80600560146101000a81548160ff0219169083151502179055507fa087c8b791d7a9eaf08393fedb4bc4f0e697ebc3f2538f7184b505925a32489f600560149054906101000a900460ff166040516105c09190611daa565b60405180910390a150565b600681565b6105d8611410565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560149054906101000a900460ff1661066b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066290611e3d565b60405180910390fd5b6106bf610678858561148e565b838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506114c1565b6106fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f590611e5d565b60405180910390fd5b6000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610780576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077790611edd565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e58306f985856040518363ffffffff1660e01b81526004016107dd929190611d81565b600060405180830381600087803b1580156107f757600080fd5b505af115801561080b573d6000803e3d6000fd5b5050505082600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461085e9190611ff5565b9250508190555050505050565b600260015414156108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a890611f3d565b60405180910390fd5b6002600181905550600560149054906101000a900460ff16610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff90611e3d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610a0f57506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109bd9190611d66565b60206040518083038186803b1580156109d557600080fd5b505afa1580156109e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0d9190611ac9565b115b610a4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4590611efd565b60405180910390fd5b600681600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a9b9190611ff5565b1115610adc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad390611e9d565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b2b9190611ff5565b92505081905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e58306f983836040518363ffffffff1660e01b8152600401610b8f929190611d81565b600060405180830381600087803b158015610ba957600080fd5b505af1158015610bbd573d6000803e3d6000fd5b50505050600081600254610bd1919061207c565b905034811115610c16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0d90611e7d565b60405180910390fd5b60006003541415610d2e57600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c8957600080fd5b505afa158015610c9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc1919061193f565b73ffffffffffffffffffffffffffffffffffffffff1681604051610ce490611d25565b60006040518083038185875af1925050503d8060008114610d21576040519150601f19603f3d011682016040523d82523d6000602084013e610d26565b606091505b5050506110ce565b600061271060035483610d41919061207c565b610d4b919061204b565b9050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610db557600080fd5b505afa158015610dc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ded919061193f565b73ffffffffffffffffffffffffffffffffffffffff168183610e0f91906120d6565b604051610e1b90611d25565b60006040518083038185875af1925050503d8060008114610e58576040519150601f19603f3d011682016040523d82523d6000602084013e610e5d565b606091505b505050600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f4657600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681604051610efc90611d25565b60006040518083038185875af1925050503d8060008114610f39576040519150601f19603f3d011682016040523d82523d6000602084013e610f3e565b606091505b5050506110cc565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663703199706040518163ffffffff1660e01b815260040160206040518083038186803b158015610fae57600080fd5b505afa158015610fc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe69190611aa0565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561102b57600080fd5b505afa15801561103f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611063919061193f565b73ffffffffffffffffffffffffffffffffffffffff168160405161108690611d25565b60006040518083038185875af1925050503d80600081146110c3576040519150601f19603f3d011682016040523d82523d6000602084013e6110c8565b606091505b5050505b505b3373ffffffffffffffffffffffffffffffffffffffff166108fc82346110f491906120d6565b9081150290604051600060405180830381858888f1935050505015801561111f573d6000803e3d6000fd5b5050600180819055505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611180611410565b61118a60006114d8565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600681565b60085481565b60025481565b6111ce611410565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560159054906101000a900460ff1681565b600560159054906101000a900460ff1615611275576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126c90611f1d565b60405180910390fd5b6001600560156101000a81548160ff02191690831515021790555081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000015160028190555080602001516bffffffffffffffffffffffff166003819055508060400151600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806060015160088190555080608001516009908051906020019061135f929190611679565b50611369836114d8565b505050565b60035481565b60076020528060005260406000206000915090505481565b611394611410565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113fb90611e1d565b60405180910390fd5b61140d816114d8565b50565b61141861159c565b73ffffffffffffffffffffffffffffffffffffffff1661143661118c565b73ffffffffffffffffffffffffffffffffffffffff161461148c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148390611ebd565b60405180910390fd5b565b600081836040516020016114a3929190611d3a565b60405160208183030381529060405280519060200120905092915050565b60006114d082600854856115a4565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000826115b185846115bb565b1490509392505050565b60008082905060005b845181101561162c576116178286838151811061160a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151611637565b915080806116249061224f565b9150506115c4565b508091505092915050565b600081831061164f5761164a8284611662565b61165a565b6116598383611662565b5b905092915050565b600082600052816020526040600020905092915050565b828054611685906121ec565b90600052602060002090601f0160209004810192826116a757600085556116ee565b82601f106116c057805160ff19168380011785556116ee565b828001600101855582156116ee579182015b828111156116ed5782518255916020019190600101906116d2565b5b5090506116fb91906116ff565b5090565b5b80821115611718576000816000905550600101611700565b5090565b600061172f61172a84611f9d565b611f78565b90508281526020810184848401111561174757600080fd5b6117528482856121aa565b509392505050565b60008135905061176981612621565b92915050565b60008151905061177e81612621565b92915050565b60008083601f84011261179657600080fd5b8235905067ffffffffffffffff8111156117af57600080fd5b6020830191508360208202830111156117c757600080fd5b9250929050565b6000813590506117dd81612638565b92915050565b6000813590506117f28161264f565b92915050565b60008151905061180781612666565b92915050565b600082601f83011261181e57600080fd5b813561182e84826020860161171c565b91505092915050565b600060a0828403121561184957600080fd5b61185360a0611f78565b90506000611863848285016118d7565b600083015250602061187784828501611901565b602083015250604061188b8482850161175a565b604083015250606061189f848285016117e3565b606083015250608082013567ffffffffffffffff8111156118bf57600080fd5b6118cb8482850161180d565b60808301525092915050565b6000813590506118e68161267d565b92915050565b6000815190506118fb8161267d565b92915050565b60008135905061191081612694565b92915050565b60006020828403121561192857600080fd5b60006119368482850161175a565b91505092915050565b60006020828403121561195157600080fd5b600061195f8482850161176f565b91505092915050565b60008060006060848603121561197d57600080fd5b600061198b8682870161175a565b935050602061199c8682870161175a565b925050604084013567ffffffffffffffff8111156119b957600080fd5b6119c586828701611837565b9150509250925092565b600080604083850312156119e257600080fd5b60006119f08582860161175a565b9250506020611a01858286016118d7565b9150509250929050565b60008060008060608587031215611a2157600080fd5b6000611a2f8782880161175a565b9450506020611a40878288016118d7565b935050604085013567ffffffffffffffff811115611a5d57600080fd5b611a6987828801611784565b925092505092959194509250565b600060208284031215611a8957600080fd5b6000611a97848285016117ce565b91505092915050565b600060208284031215611ab257600080fd5b6000611ac0848285016117f8565b91505092915050565b600060208284031215611adb57600080fd5b6000611ae9848285016118ec565b91505092915050565b611afb8161210a565b82525050565b611b12611b0d8261210a565b612298565b82525050565b611b218161211c565b82525050565b611b3081612128565b82525050565b611b3f81612186565b82525050565b6000611b5082611fce565b611b5a8185611fe4565b9350611b6a8185602086016121b9565b611b7381612382565b840191505092915050565b6000611b8b602683611fe4565b9150611b96826123a0565b604082019050919050565b6000611bae602283611fe4565b9150611bb9826123ef565b604082019050919050565b6000611bd1602983611fe4565b9150611bdc8261243e565b604082019050919050565b6000611bf4602283611fe4565b9150611bff8261248d565b604082019050919050565b6000611c17602683611fe4565b9150611c22826124dc565b604082019050919050565b6000611c3a602083611fe4565b9150611c458261252b565b602082019050919050565b6000611c5d602883611fe4565b9150611c6882612554565b604082019050919050565b6000611c80600083611fd9565b9150611c8b826125a3565b600082019050919050565b6000611ca3600f83611fe4565b9150611cae826125a6565b602082019050919050565b6000611cc6602083611fe4565b9150611cd1826125cf565b602082019050919050565b6000611ce9601f83611fe4565b9150611cf4826125f8565b602082019050919050565b611d0881612164565b82525050565b611d1f611d1a82612164565b6122bc565b82525050565b6000611d3082611c73565b9150819050919050565b6000611d468285611d0e565b602082019150611d568284611b01565b6014820191508190509392505050565b6000602082019050611d7b6000830184611af2565b92915050565b6000604082019050611d966000830185611af2565b611da36020830184611cff565b9392505050565b6000602082019050611dbf6000830184611b18565b92915050565b6000602082019050611dda6000830184611b27565b92915050565b6000602082019050611df56000830184611b36565b92915050565b60006020820190508181036000830152611e158184611b45565b905092915050565b60006020820190508181036000830152611e3681611b7e565b9050919050565b60006020820190508181036000830152611e5681611ba1565b9050919050565b60006020820190508181036000830152611e7681611bc4565b9050919050565b60006020820190508181036000830152611e9681611be7565b9050919050565b60006020820190508181036000830152611eb681611c0a565b9050919050565b60006020820190508181036000830152611ed681611c2d565b9050919050565b60006020820190508181036000830152611ef681611c50565b9050919050565b60006020820190508181036000830152611f1681611c96565b9050919050565b60006020820190508181036000830152611f3681611cb9565b9050919050565b60006020820190508181036000830152611f5681611cdc565b9050919050565b6000602082019050611f726000830184611cff565b92915050565b6000611f82611f93565b9050611f8e828261221e565b919050565b6000604051905090565b600067ffffffffffffffff821115611fb857611fb7612353565b5b611fc182612382565b9050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061200082612164565b915061200b83612164565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156120405761203f6122c6565b5b828201905092915050565b600061205682612164565b915061206183612164565b925082612071576120706122f5565b5b828204905092915050565b600061208782612164565b915061209283612164565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156120cb576120ca6122c6565b5b828202905092915050565b60006120e182612164565b91506120ec83612164565b9250828210156120ff576120fe6122c6565b5b828203905092915050565b600061211582612144565b9050919050565b60008115159050919050565b6000819050919050565b600061213d8261210a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006bffffffffffffffffffffffff82169050919050565b600061219182612198565b9050919050565b60006121a382612144565b9050919050565b82818337600083830152505050565b60005b838110156121d75780820151818401526020810190506121bc565b838111156121e6576000848401525b50505050565b6000600282049050600182168061220457607f821691505b6020821081141561221857612217612324565b5b50919050565b61222782612382565b810181811067ffffffffffffffff8211171561224657612245612353565b5b80604052505050565b600061225a82612164565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561228d5761228c6122c6565b5b600182019050919050565b60006122a3826122aa565b9050919050565b60006122b582612393565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f6d696e74696e67206e6565647320746f2062652061637469766520746f206d6960008201527f6e74000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732315a4d696e7465723a20496e76616c696420636c61696d206d657260008201527f6b6c652070726f6f660000000000000000000000000000000000000000000000602082015250565b7f696e73756666696369656e742066756e647320746f2070617920666f72206d6960008201527f6e74000000000000000000000000000000000000000000000000000000000000602082015250565b7f6578636565646564206e756d626572206f66206d696e7420696e2073696e676c60008201527f652063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4552433732315a4d696e7465723a20416c726561647920636c61696d6564206f60008201527f72206d696e746564000000000000000000000000000000000000000000000000602082015250565b50565b7f6e6f742077686974656c69737465640000000000000000000000000000000000600082015250565b7f4e46542068617320616c7265616479206265656e20696e697469616c697a6564600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61262a8161210a565b811461263557600080fd5b50565b6126418161211c565b811461264c57600080fd5b50565b61265881612128565b811461266357600080fd5b50565b61266f81612132565b811461267a57600080fd5b50565b61268681612164565b811461269157600080fd5b50565b61269d8161216e565b81146126a857600080fd5b5056fea264697066735822122092a6439bf11aec8a59d91855e9e176b438fc6f24ca5ab25526b05597dde9f1a264736f6c63430008040033';

type ERC721ZMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ZMinterConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721ZMinter__factory extends ContractFactory {
  constructor(...args: ERC721ZMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ERC721ZMinter> {
    return super.deploy(overrides || {}) as Promise<ERC721ZMinter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721ZMinter {
    return super.attach(address) as ERC721ZMinter;
  }
  override connect(signer: Signer): ERC721ZMinter__factory {
    return super.connect(signer) as ERC721ZMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ZMinterInterface {
    return new utils.Interface(_abi) as ERC721ZMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ERC721ZMinter {
    return new Contract(address, _abi, signerOrProvider) as ERC721ZMinter;
  }
}
