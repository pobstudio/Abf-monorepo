/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';
import type {
  IDataStorage,
  IDataStorageInterface,
} from '../../../contracts/interfaces/IDataStorage';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'indexToData',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

export class IDataStorage__factory {
  static readonly abi = _abi;
  static createInterface(): IDataStorageInterface {
    return new utils.Interface(_abi) as IDataStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): IDataStorage {
    return new Contract(address, _abi, signerOrProvider) as IDataStorage;
  }
}
