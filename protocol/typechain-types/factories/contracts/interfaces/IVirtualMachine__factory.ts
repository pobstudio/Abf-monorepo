/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';
import type {
  IVirtualMachine,
  IVirtualMachineInterface,
} from '../../../contracts/interfaces/IVirtualMachine';

const _abi = [
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'code',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'input',
        type: 'bytes',
      },
    ],
    name: 'run',
    outputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

export class IVirtualMachine__factory {
  static readonly abi = _abi;
  static createInterface(): IVirtualMachineInterface {
    return new utils.Interface(_abi) as IVirtualMachineInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): IVirtualMachine {
    return new Contract(address, _abi, signerOrProvider) as IVirtualMachine;
  }
}
