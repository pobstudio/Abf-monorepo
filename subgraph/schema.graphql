type Renderer @entity {
  id: ID!
  owner: Bytes!
  name: String!
  address: Bytes!
  propsSize: BigInt!
  additionalMetadataURI: String!
  registeredAt: BigInt!
}

type Collection @entity {
  id: ID! 
  owner: Bytes! # Transfer ownership
  tokens: [Token!]! @derivedFrom(field: "collection")
  transfers: [TokenTransfer!]! @derivedFrom(field: "collection")
  name: String!
  symbol: String! 
  seed: Bytes! 
  constants: Bytes! 
  code: Bytes! 
  renderer: Bytes! 
  mintingSupply: BigInt!
  price: BigInt! 
  rendererRoyaltyFraction: BigInt! 
  whitelistToken: Bytes!
}

type Token @entity {
  id: ID!
  owner: Bytes!
  collection: Collection!
  transfers: [TokenTransfer!]! @derivedFrom(field: "token")
}

type TokenTransfer @entity {
  id: ID!
  to: Bytes!
  from: Bytes!
  timestamp: BigInt! 
  blocknumber: BigInt!
  token: Token!
  collection: Collection!
}